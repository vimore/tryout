package com.securityx.model.external.bluecoat;

import com.securityx.model.external.ExternalFieldsToWebProxyMefFields;
import com.securityx.model.mef.field.api.MefFieldConstrait;
import com.securityx.model.mef.field.api.SupportedFormat;
import com.securityx.model.mef.field.api.SupportedFormats;
import com.securityx.model.mef.field.api.WebProxyMefField;
import com.securityx.model.mef.field.api.utils.SupportedFormatIntrospectionUtils;
import com.securityx.model.mef.field.constraint.*;

import java.util.*;

/**
 *
 * @author jyrialhon 
 */
public enum BluecoatMainToMefMappings implements SupportedFormat, ExternalFieldsToWebProxyMefFields {

  cs_bodylength("cs-bodylength", null, "bytes_", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setCsBodylength", Integer.class, "Number of bytes in the body (excludes header) sent from client to appliance", 1, true),
  cs_bytes("cs-bytes", WebProxyMefField.bytesIn, "bytes_", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setCsBytes", Integer.class, "Number of bytes sent from client to appliance", 1, true),
  cs_headerlength("cs-headerlength", null, "bytes_", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setCsHeaderlength", Integer.class, "Number of bytes in the header sent from client to appliance", 1, true),
  rs_bodylength("rs-bodylength", null, "bytes_", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setRsBodylength", Integer.class, "Number of bytes in the body (excludes header) sent from upstream host to appliance", 1, true),
  rs_contenttype("rs(Content-Type)", WebProxyMefField.responseContentType, "bytes_", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setRsContentType", Integer.class, "Response header: Content-Type", 1, true),
  rs_bytes("rs-bytes", null, "bytes_", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setRsBytes", Integer.class, "Number of bytes sent from upstream host to appliance", 1, true),
  rs_headerlength("rs-headerlength", null, "bytes_", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setRsHeaderlength", Integer.class, "Number of bytes in the header sent from upstream host to appliance", 1, true),
  sc_bodylength("sc-bodylength", null, "bytes_", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setScBodylength", Integer.class, "Number of bytes in the body (excludes header) sent from appliance to client", 1, true),
  sc_bytes("sc-bytes", WebProxyMefField.bytesOut, "bytes_", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setScBytes", Integer.class, "Number of bytes sent from appliance to client", 1, true),
  sc_headerlength("sc-headerlength", null, "bytes_", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setScHeaderlength", Integer.class, "Number of bytes in the header sent from appliance to client", 1, true),
  sr_bodylength("sr-bodylength", null, "bytes_", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setSrBodylength", Integer.class, "Number of bytes in the body (excludes header) sent from appliance to upstream host", 1, true),
  sr_bytes("sr-bytes", null, "bytes_", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setSrBytes", Integer.class, "Number of bytes sent from appliance to upstream host", 1, true),
  sr_headerlength("sr-headerlength", null, "bytes_", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setSrHeaderlength", Integer.class, "Number of bytes in the header sent from appliance to upstream host", 1, true),
  x_cifs_bytes_written("x-cifs-bytes-written", null, "cifs", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setXCifsBytesWritten", Integer.class, "Total number of bytes written to the associated resource", 1, true),
  x_cifs_client_bytes_read("x-cifs-client-bytes-read", null, "cifs", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setXCifsClientBytesRead", Integer.class, "Total number of bytes read by CIFS client from the associated resource", 1, true),
  x_cifs_client_read_operations("x-cifs-client-read-operations", null, "cifs", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setXCifsClientReadOperations", Integer.class, "Total number of read operations issued by the CIFS client for the associated resource", 1, true),
  x_cifs_client_other_operations("x-cifs-client-other-operations", null, "cifs", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setXCifsClientOtherOperations", Integer.class, "Total number of non read/write operations issued by the CIFS client for the associated resource", 1, true),
  x_cifs_client_write_operations("x-cifs-client-write-operations", null, "cifs", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setXCifsClientWriteOperations", Integer.class, "Total number of write operations issued by the CIFS client for the associated resource", 1, true),
  x_cifs_dos_error_class("x-cifs-dos-error-class", null, "cifs", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXCifsDosErrorClass",CharSequence.class, "DOS error class generated by server, in hexadecimal", 1, true),
  x_cifs_dos_error_code("x-cifs-dos-error-code", null, "cifs", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXCifsDosErrorCode",CharSequence.class, "DOS error code generated by server, in hexadecimal", 1, true),
  x_cifs_error_code("x-cifs-error-code", null, "cifs", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXCifsErrorCode",CharSequence.class, "Error code generated by server", 1, true),
  x_cifs_fid("x-cifs-fid", null, "cifs", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXCifsFid",CharSequence.class, "ID representing a CIFS resource", 1, true),
  x_cifs_file_size("x-cifs-file-size", null, "cifs", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXCifsFileSize",CharSequence.class, "Size in bytes of CIFS resource", 1, true),
  x_cifs_file_type("x-cifs-file-type", null, "cifs", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXCifsFileType",CharSequence.class, "Type of CIFS resource", 1, true),
  x_cifs_method("x-cifs-method", null, "cifs", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXCifsMethod",CharSequence.class, "The method associated with the CIFS request", 1, true),
  x_cifs_nt_error_code("x-cifs-nt-error-code", null, "cifs", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXCifsNtErrorCode",CharSequence.class, "NT error code generated by server, in hexadecimal", 1, true),
  x_cifs_orig_path("x-cifs-orig-path", null, "cifs", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXCifsOrigPath",CharSequence.class, "Original path name of resource to be renamed", 1, true),
  x_cifs_orig_unc_path("x-cifs-orig-unc-path", null, "cifs", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXCifsOrigUncPath",CharSequence.class, "UNC path of original path name of resource to be renamed", 1, true),
  x_cifs_path("x-cifs-path", null, "cifs", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXCifsPath",CharSequence.class, "CIFS resource name as specified in the UNC path", 1, true),
  x_cifs_server("x-cifs-server", null, "cifs", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXCifsServer",CharSequence.class, "CIFS server as specified in the UNC path", 1, true),
  x_cifs_server_bytes_read("x-cifs-server-bytes-read", null, "cifs", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setXCifsServerBytesRead", Integer.class, "Total number of bytes read by CIFS server from the associated resource", 1, true),
  x_cifs_server_operations("x-cifs-server-operations", null, "cifs", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setXCifsServerOperations", Integer.class, "Total number of operations issued to the CIFS server for the associated resource", 1, true),
  x_cifs_share("x-cifs-share", null, "cifs", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXCifsShare",CharSequence.class, "CIFS share name as specified in the UNC path", 1, true),
  x_cifs_tid("x-cifs-tid", null, "cifs", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXCifsTid",CharSequence.class, "ID representing instance of an authenticated connection to server resource", 1, true),
  x_cifs_uid("x-cifs-uid", null, "cifs", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXCifsUid",CharSequence.class, "ID representing an authenticated user instance", 1, true),
  x_cifs_unc_path("x-cifs-unc-path", null, "cifs", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXCifsUncPath",CharSequence.class, "CIFS path of form \\\\server\\share\\path where path may be empty", 1, true),
  cs_ip("cs-ip", WebProxyMefField.deviceNameOrIp, "Connection", Arrays.<MefFieldConstrait>asList(new MefInetAddressConstraint()),
          "setCsIp",CharSequence.class, "IP address of the destination of the client's connection", 1, true),
  c_connect_type("c-connect-type", null, "Connection", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setCConnectType",CharSequence.class, "The type of connection made by the client to the appliance -- 'Transparent' or 'Explicit'", 1, true),
  c_dns("c-dns", WebProxyMefField.sourceNameOrIp, "Connection", Arrays.<MefFieldConstrait>asList(new InetNameOrIpConstraint()),
          "setCDns",CharSequence.class, "Hostname of the client (uses the client's IP address to avoid reverse DNS)", 1, true),
  x_cs_dns("x-cs-dns", null, "Connection", Arrays.<MefFieldConstrait>asList(new InetNameOrIpConstraint()),
          "setXCsDns",CharSequence.class, "The hostname of the client obtained through reverse DNS", 1, true),
  x_cs_client_effective_ip("x-cs-client-effective-ip", null, "Connection", Arrays.<MefFieldConstrait>asList(new MefInetAddressConstraint()),
          "setXCsClientEffectiveIp",CharSequence.class, "The effective client IP address. Applicable if the client.effective_address() property is configured.", 1, true),
  x_cs_client_effective_ip_country("x-cs-client-effective-ip-country", null, "Connection", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXCsClientEffectiveIpCountry",CharSequence.class, "The country associated with the effective client IP address. Applicable if the client.effective_address() property is configured.", 1, true),
  c_ip("c-ip", WebProxyMefField.sourceAddress, "Connection", Arrays.<MefFieldConstrait>asList(new MefInetAddressConstraint()),
          "setCIp",CharSequence.class, "IP address of the client", 1, true),
  c_port("c-port", WebProxyMefField.sourcePort, "source port of the client", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setCPort", Integer.class, "Source port used by the client", 1, true),
  x_cs_netbios_computer_name("x-cs-netbios-computer-name", null, "Connection", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXCsNetbiosComputerName",CharSequence.class, "The NetBIOS name of the computer. This is an empty string if the query fails or the name is not reported. When using the $(netbios.*) substitutions to generate the username, the client machines must react to a NetBIOS over TCP/IP node status query.", 1, true),
  x_cs_netbios_computer_domain("x-cs-netbios-computer-domain", null, "Connection", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXCsNetbiosComputerDomain",CharSequence.class, "The name of the domain to which the computer belongs. This is an empty string if the query fails or the name is not reported. When using the $(netbios.*) substitutions to generate the username, the client machines must react to a NetBIOS over TCP/IP node status query.", 1, true),
  x_cs_netbios_messenger_username("x-cs-netbios-messenger-username", null, "Connection", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXCsNetbiosMessengerUsername",CharSequence.class, "The name of the logged-in user. This is an empty string if the query fails or the name is not reported. It is also empty there is more than one logged-in user. When using the $(netbios.*) substitutions to generate the username, the client machines must react to a NetBIOS over TCP/IP node status query.", 1, true),
  x_cs_netbios_messenger_usernames("x-cs-netbios-messenger-usernames", null, "Connection", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXCsNetbiosMessengerUsernames",CharSequence.class, "A comma-separated list of the all the messenger usernames reported by the target computer. This is an empty string if the query fails, or no names are reported. When using the $(netbios.*) substitutions to generate the username, the client machines must react to a NetBIOS over TCP/IP node status query.", 1, true),
  x_cs_session_username("x-cs-session-username", null, "Connection", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXCsSessionUsername",CharSequence.class, "The username associated with this session as reported by RADIUS accounting. This is an empty string if no session is known.", 1, true),
  x_cs_ident_username("x-cs-ident-username", null, "Connection", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXCsIdentUsername",CharSequence.class, "The username associated with this session as returned from an ident query. This is an empty string if no session is known.", 1, true),
  x_cs_connection_negotiated_cipher("x-cs-connection-negotiated-cipher", null, "Connection", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXCsConnectionNegotiatedCipher",CharSequence.class, "OpenSSL cipher suite negotiated for the client connection", 1, true),
  x_cs_connection_negotiated_cipher_strength("x-cs-connection-negotiated-cipher-strength", null, "Connection", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXCsConnectionNegotiatedCipherStrength",CharSequence.class, "Strength of the OpenSSL cipher suite negotiated for the client connection", 1, true),
  x_cs_connection_negotiated_cipher_size("x-cs-connection-negotiated-cipher-size", null, "Connection", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXCsConnectionNegotiatedCipherSize",CharSequence.class, "Ciphersize of the OpenSSL cipher suite negotiated for the client connection", 1, true),
  x_cs_connection_negotiated_ssl_version("x-cs-connection-negotiated-ssl-version", null, "Connection", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXCsConnectionNegotiatedSslVersion",CharSequence.class, "Version of the SSL protocol negotiated for the client connection", 1, true),
  r_dns("r-dns", null, "Connection", Arrays.<MefFieldConstrait>asList(new InetNameOrIpConstraint()),
          "setRDns",CharSequence.class, "Hostname from the outbound server URL", 1, true),
  r_ip("r-ip", null, "Connection", Arrays.<MefFieldConstrait>asList(new MefInetAddressConstraint()),
          "setRIp",CharSequence.class, "IP address from the outbound server URL", 1, true),
  r_port("r-port", null, "Connection", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setRPort", Integer.class, "Port from the outbound server URL", 1, true),
  r_supplier_dns("r-supplier-dns", null, "Connection", Arrays.<MefFieldConstrait>asList(new InetNameOrIpConstraint()),
          "setRSupplierDns",CharSequence.class, "Hostname of the upstream host (not available for a cache hit)", 1, true),
  r_supplier_ip("r-supplier-ip", null, "Connection", Arrays.<MefFieldConstrait>asList(new MefInetAddressConstraint()),
          "setRSupplierIp",CharSequence.class, "IP address used to contact the upstream host (not available for a cache hit)", 1, true),
  r_supplier_port("r-supplier-port", null, "Connection", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setRSupplierPort", Integer.class, "Port used to contact the upstream host (not available for a cache hit)", 1, true),
  sc_adapter("sc-adapter", null, "Connection", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setScAdapter", Integer.class, "Adapter number of the client's connection to the Appliance", 1, true),
  sc_connection("sc-connection", null, "Connection", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setScConnection",CharSequence.class, "Unique identifier of the client's connection (i.e. SOCKET)", 1, true),
  x_bluecoat_server_connection_socket_errno("x-bluecoat-server-connection-socket-errno", null, "Connection", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXBluecoatServerConnectionSocketErrno",CharSequence.class, "Error message associated with a failed attempt to connect to an upstream host", 1, true),
  s_computername("s-computername", null, "Connection", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setSComputername",CharSequence.class, "Configured name of the appliance", 1, true),
  s_connect_type("s-connect-type", null, "Connection", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setSConnectType",CharSequence.class, "Upstream connection type (Direct, SOCKS gateway, etc.)", 1, true),
  s_dns("s-dns", WebProxyMefField.deviceNameOrIp, "Connection", Arrays.<MefFieldConstrait>asList(new InetNameOrIpConstraint()),
          "setSDns",CharSequence.class, "Hostname of the appliance (uses the primary IP address to avoid reverse DNS)", 1, true),
  s_ip("s-ip", WebProxyMefField.deviceAddress, "Connection", Arrays.<MefFieldConstrait>asList(new MefInetAddressConstraint()),
          "setSIp",CharSequence.class, "IP address of the appliance on which the client established its connection", 1, true),
  s_port("s-port", null, "Connection", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setSPort", Integer.class, "Port of the appliance on which the client established its connection", 1, true),
  s_source_port("s-source-port", null, "Connection", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setSSourcePort",CharSequence.class, "The source port of the ProxySG appliance when attempting to access a remote site or URL (note: this field is available for HTTP, HTTPS, and FTP proxies)", 1, true),
  s_sitename("s-sitename", WebProxyMefField.deviceProcessName, "Connection", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setSSitename",CharSequence.class, "The service type used to process the transaction", 1, true),
  x_service_group("x-service-group", null, "Connection", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXServiceGroup",CharSequence.class, "The name of the service group that handled the transaction", 1, true),
  x_service_name("x-service-name", null, "Connection", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXServiceName",CharSequence.class, "The name of the service that handled the transaction", 1, true),
  x_module_name("x-module-name", null, "Connection", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXModuleName",CharSequence.class, "The SGOS module that is handling the transaction", 1, true),
  s_supplier_ip("s-supplier-ip", WebProxyMefField.destinationAddress, "Connection", Arrays.<MefFieldConstrait>asList(new MefInetAddressConstraint()),
          "setSSupplierIp",CharSequence.class, "IP address used to contact the upstream host (not available for a cache hit)", 1, true),
  s_supplier_name("s-supplier-name", null, "Connection", Arrays.<MefFieldConstrait>asList(new InetNameOrIpConstraint()),
          "setSSupplierName",CharSequence.class, "Hostname of the upstream host (not available for a cache hit)", 1, true),
  x_bluecoat_transaction_id("x-bluecoat-transaction-id", null, "Connection", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXBluecoatTransactionId",CharSequence.class, "Unique per-request identifier generated by the appliance (note: this value is not unique across multiple appliances)", 1, true),
  x_bluecoat_appliance_name("x-bluecoat-appliance-name", null, "Connection", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXBluecoatApplianceName",CharSequence.class, "Configured name of the appliance", 1, true),
  x_bluecoat_appliance_primary_address("x-bluecoat-appliance-primary-address", null, "Connection", Arrays.<MefFieldConstrait>asList(new MefInetAddressConstraint()),
          "setXBluecoatAppliancePrimaryAddress",CharSequence.class, "Primary IP address of the appliance", 1, true),
  x_bluecoat_proxy_primary_address("x-bluecoat-proxy-primary-address", null, "Connection", Arrays.<MefFieldConstrait>asList(new MefInetAddressConstraint()),
          "setXBluecoatProxyPrimaryAddress",CharSequence.class, "Primary IP address of the appliance", 1, true),
  x_bluecoat_appliance_identifier("x-bluecoat-appliance-identifier", null, "Connection", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXBluecoatApplianceIdentifier",CharSequence.class, "Compact identifier of the appliance", 1, true),
  x_appliance_serial_number("x-appliance-serial-number", null, "Connection", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXApplianceSerialNumber",CharSequence.class, "The serial number of the appliance", 1, true),
  x_appliance_mc_certificate_fingerprint("x-appliance-mc-certificate-fingerprint", null, "Connection", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXApplianceMcCertificateFingerprint",CharSequence.class, "The fingerprint of the management console certificate", 1, true),
  x_appliance_product_name("x-appliance-product-name", null, "Connection", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXApplianceProductName",CharSequence.class, "The product name of the appliance; for xample: Blue Coat SG4xx", 1, true),
  x_appliance_product_tag("x-appliance-product-tag", null, "Connection", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXApplianceProductTag",CharSequence.class, "The product tag of the appliance; for example: SG4xx", 1, true),
  x_appliance_series_name("x-appliance-series-name", null, "Connection", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXApplianceSeriesName",CharSequence.class, "The series name of the appliance; for example: 400", 1, true),
  x_appliance_full_version("x-appliance-full-version", null, "Connection", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXApplianceFullVersion",CharSequence.class, "The full version of the SGOS software", 1, true),
  x_appliance_first_mac_address("x-appliance-first-mac-address", null, "Connection", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXApplianceFirstMacAddress",CharSequence.class, "The MAC address of the first installed adapter", 1, true),
  x_client_address("x-client-address", null, "Connection", Arrays.<MefFieldConstrait>asList(new MefInetAddressConstraint()),
          "setXClientAddress",CharSequence.class, "IP address of the client", 1, true),
  x_client_connection_bytes("x-client-connection-bytes", null, "Connection", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setXClientConnectionBytes", Integer.class, "Total number of bytes send to and received from the client", 1, true),
  x_client_ip("x-client-ip", null, "Connection", Arrays.<MefFieldConstrait>asList(new MefInetAddressConstraint()),
          "setXClientIp",CharSequence.class, "IP address of the client", 1, true),
  x_server_connection_bytes("x-server-connection-bytes", null, "Connection", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setXServerConnectionBytes", Integer.class, "Total number of bytes send to and received from the server", 1, true),
  x_server_adn_connection_bytes("x-server-adn-connection-bytes", null, "Connection", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setXServerAdnConnectionBytes", Integer.class, "Total number of compressed ADN bytes send to and received from the server", 1, true),
  x_rs_connection_negotiated_cipher("x-rs-connection-negotiated-cipher", null, "Connection", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXRsConnectionNegotiatedCipher",CharSequence.class, "OpenSSL cipher suite negotiated for the client connection", 1, true),
  x_rs_connection_negotiated_cipher_strength("x-rs-connection-negotiated-cipher-strength", null, "Connection", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXRsConnectionNegotiatedCipherStrength",CharSequence.class, "Strength of the OpenSSL cipher suite negotiated for the server connection", 1, true),
  x_rs_connection_negotiated_cipher_size("x-rs-connection-negotiated-cipher-size", null, "Connection", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXRsConnectionNegotiatedCipherSize",CharSequence.class, "Ciphersize of the OpenSSL cipher suite negotiated for the server connection", 1, true),
  x_rs_connection_negotiated_ssl_version("x-rs-connection-negotiated-ssl-version", null, "Connection", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXRsConnectionNegotiatedSslVersion",CharSequence.class, "Version of the SSL protocol negotiated for the server connection", 1, true),
  x_cs_connection_dscp("x-cs-connection-dscp", null, "Connection", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXCsConnectionDscp",CharSequence.class, "DSCP client inbound value", 1, true),
  x_rs_connection_dscp("x-rs-connection-dscp", null, "Connection", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXRsConnectionDscp",CharSequence.class, "DSCP server inbound value", 1, true),
  x_sc_connection_dscp_decision("x-sc-connection-dscp-decision", null, "Connection", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXScConnectionDscpDecision",CharSequence.class, "DSCP client outbound value", 1, true),
  x_sr_connection_dscp_decision("x-sr-connection-dscp-decision", null, "Connection", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXSrConnectionDscpDecision",CharSequence.class, "DSCP server outbound value", 1, true),
  x_dns_cs_transport("x-dns-cs-transport", null, "dns", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXDnsCsTransport",CharSequence.class, "The transport protocol used by the client connection in a DNS query", 1, true),
  x_dns_cs_address("x-dns-cs-address", null, "dns", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXDnsCsAddress",CharSequence.class, "The address queried in a reverse DNS lookup", 1, true),
  x_dns_cs_dns("x-dns-cs-dns", null, "dns", Arrays.<MefFieldConstrait>asList(new InetNameOrIpConstraint()),
          "setXDnsCsDns",CharSequence.class, "The hostname queried in a forward DNS lookup", 1, true),
  x_dns_cs_opcode("x-dns-cs-opcode", null, "dns", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXDnsCsOpcode",CharSequence.class, "The DNS OPCODE used in the DNS query", 1, true),
  x_dns_cs_qtype("x-dns-cs-qtype", null, "dns", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXDnsCsQtype",CharSequence.class, "The DNS QTYPE used in the DNS query", 1, true),
  x_dns_cs_qclass("x-dns-cs-qclass", null, "dns", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXDnsCsQclass",CharSequence.class, "The DNS QCLASS used in the DNS query", 1, true),
  x_dns_rs_rcode("x-dns-rs-rcode", null, "dns", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXDnsRsRcode",CharSequence.class, "The DNS RCODE in the response from upstream", 1, true),
  x_dns_rs_a_records("x-dns-rs-a-records", null, "dns", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXDnsRsARecords",CharSequence.class, "The DNS A RRs in the response from upstream", 1, true),
  x_dns_rs_cname_records("x-dns-rs-cname-records", null, "dns", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXDnsRsCnameRecords",CharSequence.class, "The DNS CNAME RRs in the response from upstream", 1, true),
  x_dns_rs_ptr_records("x-dns-rs-ptr-records", null, "dns", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXDnsRsPtrRecords",CharSequence.class, "The DNS PTR RRs in the response from upstream", 1, true),
  x_im_buddy_id("x-im-buddy-id", null, "im", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXImBuddyId",CharSequence.class, "Instant messaging buddy ID", 1, true),
  x_im_buddy_name("x-im-buddy-name", null, "im", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXImBuddyName",CharSequence.class, "Instant messaging buddy display name", 1, true),
  x_im_buddy_state("x-im-buddy-state", null, "im", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXImBuddyState",CharSequence.class, "Instant messaging buddy state", 1, true),
  x_im_chat_room_id("x-im-chat-room-id", null, "im", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXImChatRoomId",CharSequence.class, "Instant messaging identifier of the chat room in use", 1, true),
  x_im_chat_room_members("x-im-chat-room-members", null, "im", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXImChatRoomMembers",CharSequence.class, "The list of chat room member Ids", 1, true),
  x_im_chat_room_type("x-im-chat-room-type", null, "im", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXImChatRoomType",CharSequence.class, "The chat room type, one of 'public' or 'public', and possibly 'invite_only', 'voice' and/or 'conference'", 1, true),
  x_im_client_info("x-im-client-info", null, "im", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXImClientInfo",CharSequence.class, "The instant messaging client information", 1, true),
  x_im_user_agent("x-im-user-agent", null, "im", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXImUserAgent",CharSequence.class, "The instant messaging user agent string", 1, true),
  x_im_file_path("x-im-file-path", null, "im", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXImFilePath",CharSequence.class, "Path of the file associated with an instant message", 1, true),
  x_im_file_size("x-im-file-size", null, "im", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXImFileSize",CharSequence.class, "Size of the file associated with an instant message", 1, true),
  x_im_http_gateway("x-im-http-gateway", null, "im", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXImHttpGateway",CharSequence.class, "The upstream HTTP gateway used for IM (if any)", 1, true),
  x_im_message_opcode("x-im-message-opcode", null, "im", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXImMessageOpcode",CharSequence.class, "The opcode utilized in the instant message", 1, true),
  x_im_message_reflected("x-im-message-reflected", null, "im", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXImMessageReflected",CharSequence.class, "Indicates whether or not the IM message was reflected.", 1, true),
  x_im_message_route("x-im-message-route", null, "im", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXImMessageRoute",CharSequence.class, "The route of the instance message", 1, true),
  x_im_message_size("x-im-message-size", null, "im", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXImMessageSize",CharSequence.class, "Length of the instant message", 1, true),
  x_im_message_text("x-im-message-text", null, "im", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXImMessageText",CharSequence.class, "Text of the instant message", 1, true),
  x_im_message_type("x-im-message-type", null, "im", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXImMessageType",CharSequence.class, "The type of the instant message", 1, true),
  x_im_method("x-im-method", null, "im", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXImMethod",CharSequence.class, "The method associated with the instant message", 1, true),
  x_im_user_id("x-im-user-id", null, "im", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXImUserId",CharSequence.class, "Instant messaging user identifer", 1, true),
  x_im_user_name("x-im-user-name", null, "im", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXImUserName",CharSequence.class, "Display name of the client", 1, true),
  x_im_user_state("x-im-user-state", null, "im", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXImUserState",CharSequence.class, "Instant messaging user state", 1, true),
  x_mapi_method("x-mapi-method", null, "mapi", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXMapiMethod",CharSequence.class, "The method associated with the MAPI request", 1, true),
  x_mapi_user_dn("x-mapi-user-dn", null, "mapi", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXMapiUserDn",CharSequence.class, "The distinguished name of the user negotiated by MAPI", 1, true),
  x_mapi_user("x-mapi-user", null, "mapi", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXMapiUser",CharSequence.class, "The name of the user negotiated by MAPI. See x-mapi-user-dn for the fully distinguished name.", 1, true),
  x_mapi_cs_rpc_count("x-mapi-cs-rpc-count", null, "mapi", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXMapiCsRpcCount",CharSequence.class, "The count of RPC messages received from the client", 1, true),
  x_mapi_sr_rpc_count("x-mapi-sr-rpc-count", null, "mapi", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXMapiSrRpcCount",CharSequence.class, "The count of RPC messages sent to the server", 1, true),
  x_mapi_rs_rpc_count("x-mapi-rs-rpc-count", null, "mapi", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXMapiRsRpcCount",CharSequence.class, "The count of RPC messages received from the server", 1, true),
  x_mapi_sc_rpc_count("x-mapi-sc-rpc-count", null, "mapi", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXMapiScRpcCount",CharSequence.class, "The count RPC messages sent to the client", 1, true),
  x_mapi_endpoint_rpc_count("x-mapi-endpoint-rpc-count", null, "mapi", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setXMapiEndpointRpcCount", Integer.class, "Total number of RPC messages sent to the end point", 1, true),
  x_mapi_peer_rpc_count("x-mapi-peer-rpc-count", null, "mapi", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setXMapiPeerRpcCount", Integer.class, "Total number of RPC messages sent to the peer", 1, true),
  x_p2p_client_bytes("x-p2p-client-bytes", null, "p2p", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setXP2pClientBytes", Integer.class, "Number of bytes from client", 1, true),
  x_p2p_client_info("x-p2p-client-info", null, "p2p", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXP2pClientInfo",CharSequence.class, "The peer-to-peer client information", 1, true),
  x_p2p_client_type("x-p2p-client-type", null, "p2p", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXP2pClientType",CharSequence.class, "The peer-to-peer client type", 1, true),
  x_p2p_peer_bytes("x-p2p-peer-bytes", null, "p2p", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setXP2pPeerBytes", Integer.class, "Number of bytes from peer", 1, true),
  c_pkts_lost_client("c-pkts-lost-client", null, "packets", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setCPktsLostClient", Integer.class, "Number of packets lost during transmission from server to client and not recovered at the client layer via error correction or at the network layer via UDP resends.", 1, true),
  c_pkts_lost_cont_net("c-pkts-lost-cont-net", null, "packets", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setCPktsLostContNet", Integer.class, "Maximum number of continuously lost packets on the network layer during transmission from server to client", 1, true),
  c_pkts_lost_net("c-pkts-lost-net", null, "packets", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setCPktsLostNet", Integer.class, "Number of packets lost on the network layer", 1, true),
  c_pkts_received("c-pkts-received", null, "packets", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setCPktsReceived", Integer.class, "Number of packets from the server (s-pkts-sent) that are received correctly by the client on the first try", 1, true),
  c_pkts_recovered_ECC("c-pkts-recovered-ECC", null, "packets", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setCPktsRecoveredECC", Integer.class, "Number of packets repaired and recovered on the client layer", 1, true),
  c_pkts_recovered_resent("c-pkts-recovered-resent", null, "packets", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setCPktsRecoveredResent", Integer.class, "Number of packets recovered because they were resent via UDP.", 1, true),
  c_quality("c-quality", null, "packets", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setCQuality",CharSequence.class, "The percentage of packets that were received by the client, indicating the quality of the stream", 1, true),
  c_resendreqs("c-resendreqs", null, "packets", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setCResendreqs", Integer.class, "Number of client requests to receive new packets", 1, true),
  s_pkts_sent("s-pkts-sent", null, "packets", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setSPktsSent", Integer.class, "Number of packets from the server", 1, true),
  cs_method("cs-method", WebProxyMefField.requestMethod, "req_rsp_line", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setCsMethod",CharSequence.class, "Request method used from client to appliance", 1, true),
  x_cs_http_method("x-cs-http-method", null, "req_rsp_line", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXCsHttpMethod",CharSequence.class, "HTTP request method used from client to appliance. Empty for non-HTTP transactions", 1, true),
  cs_protocol("cs-protocol", null, "req_rsp_line", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setCsProtocol",CharSequence.class, "Protocol used in the client's request", 1, true),
  cs_request_line("cs-request-line", null, "req_rsp_line", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setCsRequestLine",CharSequence.class, "First line of the client's request", 1, true),
  x_cs_raw_headers_count("x-cs-raw-headers-count", null, "req_rsp_line", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setXCsRawHeadersCount", Integer.class, "Total number of 'raw' headers in the request", 1, true),
  x_cs_raw_headers_length("x-cs-raw-headers-length", null, "req_rsp_line", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXCsRawHeadersLength",CharSequence.class, "Total length of 'raw' headers in the request", 1, true),
  cs_version("cs-version", WebProxyMefField.requestVersion, "req_rsp_line", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setCsVersion",CharSequence.class, "Protocol and version from the client's request, e.g. HTTP/1.1", 1, true),
  x_bluecoat_proxy_via_http_version("x-bluecoat-proxy-via-http-version", null, "req_rsp_line", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXBluecoatProxyViaHttpVersion",CharSequence.class, "Default HTTP protocol version of the appliance without protocol decoration (e.g. 1.1 for HTTP/1.1)", 1, true),
  x_bluecoat_redirect_location("x-bluecoat-redirect-location", null, "req_rsp_line", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXBluecoatRedirectLocation",CharSequence.class, "Redirect location URL specified by a redirect CPL action", 1, true),
  rs_response_line("rs-response-line", null, "req_rsp_line", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setRsResponseLine",CharSequence.class, "First line (a.k.a. status line) of the response from an upstream host to the appliance", 1, true),
  rs_status("rs-status", null, "req_rsp_line", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setRsStatus",CharSequence.class, "Protocol status code of the response from an upstream host to the appliance", 1, true),
  rs_version("rs-version", null, "req_rsp_line", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setRsVersion",CharSequence.class, "Protocol and version of the response from an upstream host to the appliance, e.g. HTTP/1.1", 1, true),
  sc_status("sc-status", WebProxyMefField.cefSignatureId, "req_rsp_line", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setScStatus",CharSequence.class, "Protocol status code from appliance to client", 1, true),
  x_bluecoat_ssl_failure_reason("x-bluecoat-ssl-failure-reason", null, "req_rsp_line", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXBluecoatSslFailureReason",CharSequence.class, "Upstream SSL negotiation failure reason", 1, true),
  x_cs_http_version("x-cs-http-version", null, "req_rsp_line", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXCsHttpVersion",CharSequence.class, "HTTP protocol version of request from the client. Does not include protocol qualifier (e.g. 1.1 for HTTP/1.1)", 1, true),
  x_cs_socks_ip("x-cs-socks-ip", null, "req_rsp_line", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXCsSocksIp",CharSequence.class, "Destination IP address of a proxied SOCKS request", 1, true),
  x_cs_socks_port("x-cs-socks-port", null, "req_rsp_line", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setXCsSocksPort", Integer.class, "Destination port of a proxied SOCKS request", 1, true),
  x_cs_socks_method("x-cs-socks-method", null, "req_rsp_line", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXCsSocksMethod",CharSequence.class, "Method of a proxied SOCKS request", 1, true),
  x_cs_socks_version("x-cs-socks-version", null, "req_rsp_line", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXCsSocksVersion",CharSequence.class, "Version of a proxied SOCKS request.", 1, true),
  x_cs_socks_compression("x-cs-socks-compression", null, "req_rsp_line", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXCsSocksCompression",CharSequence.class, "Used compression in SOCKS client side connection.", 1, true),
  x_sr_socks_compression("x-sr-socks-compression", null, "req_rsp_line", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXSrSocksCompression",CharSequence.class, "Used compression in SOCKS server side connection.", 1, true),
  x_sc_http_status("x-sc-http-status", null, "req_rsp_line", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXScHttpStatus",CharSequence.class, "HTTP response code sent from appliance to client", 1, true),
  x_rs_http_version("x-rs-http-version", null, "req_rsp_line", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXRsHttpVersion",CharSequence.class, "HTTP protocol version of response from the upstream host. Does not include protocol qualifier (e.g. 1.1 for HTTP/1.1)", 1, true),
  x_sc_http_version("x-sc-http-version", null, "req_rsp_line", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXScHttpVersion",CharSequence.class, "HTTP protocol version of response to client. Does not include protocol qualifier (e.g. 1.1 for HTTP/1.1)", 1, true),
  x_sr_http_version("x-sr-http-version", null, "req_rsp_line", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXSrHttpVersion",CharSequence.class, "HTTP protocol version of request to the upstream host. Does not include protocol qualifier (for example, 1.1 for HTTP/1.1)", 1, true),
  sc0_Content_Encoding_0("sc(Content-Encoding)", null, "req_rsp_line", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setSc0ContentEncoding0",CharSequence.class, "Client Response header: Content-Encoding", 1, true),
  sr0_Accept_Encoding_0("sr(Accept-Encoding)", null, "req_rsp_line", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setSr0AcceptEncoding0",CharSequence.class, "Server Request header: Accept-Encoding", 1, true),
  x_rs_certificate_hostname("x-rs-certificate-hostname", null, "ssl", Arrays.<MefFieldConstrait>asList(new InetNameOrIpConstraint()),
          "setXRsCertificateHostname",CharSequence.class, "Hostname from the server's SSL certificate", 1, true),
  x_rs_certificate_hostname_categories("x-rs-certificate-hostname-categories", null, "ssl", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXRsCertificateHostnameCategories",CharSequence.class, "All content categories of the server's SSL certificate's hostname", 1, true),
  x_rs_certificate_hostname_categories_policy("x-rs-certificate-hostname-categories-policy", null, "ssl", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXRsCertificateHostnameCategoriesPolicy",CharSequence.class, "All content categories of the server's SSL certificate's hostname that are defined by CPL.", 1, true),
  x_rs_certificate_hostname_categories_local("x-rs-certificate-hostname-categories-local", null, "ssl", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXRsCertificateHostnameCategoriesLocal",CharSequence.class, "All content categories of the server's SSL certificate's hostname that are defined by a Local database.", 1, true),
  x_rs_certificate_hostname_categories_bluecoat("x-rs-certificate-hostname-categories-bluecoat", null, "ssl", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXRsCertificateHostnameCategoriesBluecoat",CharSequence.class, "All content categories of the server's SSL certificate's hostname that are defined by Blue Coat Web Filter.", 1, true),
  x_rs_certificate_hostname_categories_provider("x-rs-certificate-hostname-categories-provider", null, "ssl", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXRsCertificateHostnameCategoriesProvider",CharSequence.class, "All content categories of the server's SSL certificate's hostname that are defined by the current 3rd-party provider.", 1, true),
  x_rs_certificate_hostname_categories_qualified("x-rs-certificate-hostname-categories-qualified", null, "ssl", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXRsCertificateHostnameCategoriesQualified",CharSequence.class, "All content categories of the server's SSL certificate's hostname, qualified by the provider of the category.", 1, true),
  x_rs_certificate_hostname_category("x-rs-certificate-hostname-category", null, "ssl", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXRsCertificateHostnameCategory",CharSequence.class, "Single content category of the server's SSL certificate's hostname", 1, true),
  x_rs_certificate_valid_from("x-rs-certificate-valid-from", null, "ssl", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXRsCertificateValidFrom",CharSequence.class, "Date from which the certificate presented by the server is valid", 1, true),
  x_rs_certificate_valid_to("x-rs-certificate-valid-to", null, "ssl", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXRsCertificateValidTo",CharSequence.class, "Date until which the certificate presented by the server is valid", 1, true),
  x_rs_certificate_serial_number("x-rs-certificate-serial-number", null, "ssl", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXRsCertificateSerialNumber",CharSequence.class, "Serial number of the certificate presented by the server", 1, true),
  x_rs_certificate_issuer("x-rs-certificate-issuer", null, "ssl", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXRsCertificateIssuer",CharSequence.class, "Issuer of the certificate presented by the server", 1, true),
  x_rs_certificate_signature_algorithm("x-rs-certificate-signature-algorithm", null, "ssl", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXRsCertificateSignatureAlgorithm",CharSequence.class, "Signature algorithm in the certificate presented by the server", 1, true),
  x_rs_certificate_pubkey_algorithm("x-rs-certificate-pubkey-algorithm", null, "ssl", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXRsCertificatePubkeyAlgorithm",CharSequence.class, "Public key algorithm in the certificate presented by the server", 1, true),
  x_rs_certificate_version("x-rs-certificate-version", null, "ssl", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXRsCertificateVersion",CharSequence.class, "Version of the certificate presented by the server", 1, true),
  x_rs_certificate_subject("x-rs-certificate-subject", null, "ssl", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXRsCertificateSubject",CharSequence.class, "Subject of the certificate presented by the server", 1, true),
  x_cs_certificate_common_name("x-cs-certificate-common-name", null, "ssl", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXCsCertificateCommonName",CharSequence.class, "Common name in the client certificate", 1, true),
  x_cs_certificate_valid_from("x-cs-certificate-valid-from", null, "ssl", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXCsCertificateValidFrom",CharSequence.class, "Date from which the certificate presented by the client is valid", 1, true),
  x_cs_certificate_valid_to("x-cs-certificate-valid-to", null, "ssl", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXCsCertificateValidTo",CharSequence.class, "Date until which the certificate presented by the client is valid", 1, true),
  x_cs_certificate_serial_number("x-cs-certificate-serial-number", null, "ssl", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXCsCertificateSerialNumber",CharSequence.class, "Serial number of the certificate presented by the client", 1, true),
  x_cs_certificate_issuer("x-cs-certificate-issuer", null, "ssl", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXCsCertificateIssuer",CharSequence.class, "Issuer of the certificate presented by the client", 1, true),
  x_cs_certificate_signature_algorithm("x-cs-certificate-signature-algorithm", null, "ssl", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXCsCertificateSignatureAlgorithm",CharSequence.class, "Signature algorithm in the certificate presented by the client", 1, true),
  x_cs_certificate_pubkey_algorithm("x-cs-certificate-pubkey-algorithm", null, "ssl", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXCsCertificatePubkeyAlgorithm",CharSequence.class, "Public key algorithm in the certificate presented by the client", 1, true),
  x_cs_certificate_version("x-cs-certificate-version", null, "ssl", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXCsCertificateVersion",CharSequence.class, "Version of the certificate presented by the client", 1, true),
  x_cs_certificate_subject("x-cs-certificate-subject", null, "ssl", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXCsCertificateSubject",CharSequence.class, "Subject of the certificate presented by the client", 1, true),
  x_cs_ocsp_error("x-cs-ocsp-error", null, "ssl", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXCsOcspError",CharSequence.class, "Errors observed during OCSP check of client certificate", 1, true),
  x_rs_certificate_observed_errors("x-rs-certificate-observed-errors", null, "ssl", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXRsCertificateObservedErrors",CharSequence.class, "Errors observed in the server certificate", 1, true),
  x_rs_ocsp_error("x-rs-ocsp-error", null, "ssl", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXRsOcspError",CharSequence.class, "Errors observed during OCSP check of server certificate", 1, true),
  x_bluecoat_release_id("x-bluecoat-release-id", null, "status", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXBluecoatReleaseId",CharSequence.class, "The release ID of the ProxySG operating system", 1, true),
  x_bluecoat_release_version("x-bluecoat-release-version", null, "status", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXBluecoatReleaseVersion",CharSequence.class, "The release version of the ProxySG operating system", 1, true),
  x_http_noncacheable_reason("x-http-noncacheable-reason", null, "status", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXHttpNoncacheableReason",CharSequence.class, "The reason(s) the HTTP response was not cached", 1, true),
  cs_categories("cs-categories", WebProxyMefField.deviceEventCategory, "status", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setCsCategories",CharSequence.class, "All content categories of the request URL", 1, true),
  cs_categories_external("cs-categories-external", null, "status", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setCsCategoriesExternal",CharSequence.class, "All content categories of the request URL that are defined by an external service.", 1, true),
  cs_categories_policy("cs-categories-policy", null, "status", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setCsCategoriesPolicy",CharSequence.class, "All content categories of the request URL that are defined by CPL", 1, true),
  cs_categories_local("cs-categories-local", null, "status", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setCsCategoriesLocal",CharSequence.class, "All content categories of the request URL that are defined by a Local database.", 1, true),
  cs_categories_bluecoat("cs-categories-bluecoat", null, "status", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setCsCategoriesBluecoat",CharSequence.class, "All content categories of the request URL that are defined by Blue Coat Web Filter.", 1, true),
  cs_categories_provider("cs-categories-provider", null, "status", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setCsCategoriesProvider",CharSequence.class, "All content categories of the request URL that are defined by the current 3rd-party provider.", 1, true),
  cs_categories_qualified("cs-categories-qualified", null, "status", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setCsCategoriesQualified",CharSequence.class, "All content categories of the request URL, qualified by the provider of the category.", 1, true),
  cs_category("cs-category", WebProxyMefField.deviceEventCategory, "status", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setCsCategory",CharSequence.class, "Single content category of the request URL (a.k.a. sc-filter-category)", 1, true),
  cs_uri_categories("cs-uri-categories", null, "status", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setCsUriCategories",CharSequence.class, "All content categories of the request URL", 1, true),
  cs_uri_categories_external("cs-uri-categories-external", null, "status", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setCsUriCategoriesExternal",CharSequence.class, "All content categories of the request URL that are defined by an external service.", 1, true),
  cs_uri_categories_policy("cs-uri-categories-policy", null, "status", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setCsUriCategoriesPolicy",CharSequence.class, "All content categories of the request URL that are defined by CPL", 1, true),
  cs_uri_categories_local("cs-uri-categories-local", null, "status", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setCsUriCategoriesLocal",CharSequence.class, "All content categories of the request URL that are defined by a Local database.", 1, true),
  cs_uri_categories_bluecoat("cs-uri-categories-bluecoat", null, "status", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setCsUriCategoriesBluecoat",CharSequence.class, "All content categories of the request URL that are defined by Blue Coat Web Filter.", 1, true),
  cs_uri_categories_provider("cs-uri-categories-provider", null, "status", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setCsUriCategoriesProvider",CharSequence.class, "All content categories of the request URL that are defined by the current 3rd-party provider.", 1, true),
  cs_uri_categories_qualified("cs-uri-categories-qualified", null, "status", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setCsUriCategoriesQualified",CharSequence.class, "All content categories of the request URL, qualified by the provider of the category.", 1, true),
  cs_uri_category("cs-uri-category", null, "status", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setCsUriCategory",CharSequence.class, "Single content category of the request URL (a.k.a. sc-filter- category)", 1, true),
  x_cs0_Referer_0_uri_categories("x-cs(Referer)-uri-categories", null, "status", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXCs0Referer0UriCategories",CharSequence.class, "All content categories of the Referer header URL", 1, true),
  x_cs0_Referer_0_uri_categories_policy("x-cs(Referer)-uri-categories-policy", null, "status", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXCs0Referer0UriCategoriesPolicy",CharSequence.class, "All content categories of the Referer header URL that are defined by CPL.", 1, true),
  x_cs0_Referer_0_uri_categories_local("x-cs(Referer)-uri-categories-local", null, "status", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXCs0Referer0UriCategoriesLocal",CharSequence.class, "All content categories of the Referer header URL that are defined by a Local database.", 1, true),
  x_cs0_Referer_0_uri_categories_bluecoat("x-cs(Referer)-uri-categories-bluecoat", null, "status", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXCs0Referer0UriCategoriesBluecoat",CharSequence.class, "All content categories of the Referer header URL that are defined by Blue Coat Web Filter.", 1, true),
  x_cs0_Referer_0_uri_categories_provider("x-cs(Referer)-uri-categories-provider", null, "status", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXCs0Referer0UriCategoriesProvider",CharSequence.class, "All content categories of the Referer header URL that are defined by the current 3rd-party provider.", 1, true),
  x_cs0_Referer_0_uri_categories_qualified("x-cs(Referer)-uri-categories-qualified", null, "status", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXCs0Referer0UriCategoriesQualified",CharSequence.class, "All content categories of the Referer header URL, qualified by the provider of the category.", 1, true),
  x_cs0_Referer_0_uri_category("x-cs(Referer)-uri-category", null, "status", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXCs0Referer0UriCategory",CharSequence.class, "Single content category of the Referer header URL (a.k.a. sc-filter-category)", 1, true),
  r_hierarchy("r-hierarchy", null, "status", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setRHierarchy",CharSequence.class, "How and where the object was retrieved in the cache hierarchy.", 1, true),
  sc_filter_category("sc-filter-category", WebProxyMefField.deviceEventCategory, "status", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setScFilterCategory",CharSequence.class, "Content filtering category of the request URL", 1, true),
  sc_filter_result("sc-filter-result", WebProxyMefField.devicePolicyAction, "status", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setScFilterResult",CharSequence.class, "Deprecated content filtering result: Denied, Proxied or Observed", 1, true),
  s_action("s-action", WebProxyMefField.deviceAction, "status", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setSAction", CharSequence.class, "What type of action did the Appliance take to process this request; possible values include ALLOWED, DENIED, FAILED, SERVER_ERROR", 1, true),
  s_cpu_util("s-cpu-util", null, "status", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setSCpuUtil",CharSequence.class, "Average load on the proxy's processor (0%-100%)", 1, true),
  s_hierarchy("s-hierarchy", null, "status", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setSHierarchy",CharSequence.class, "How and where the object was retrieved in the cache hierarchy.", 1, true),
  s_icap_info("s-icap-info", null, "status", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setSIcapInfo",CharSequence.class, "ICAP response information", 1, true),
  s_icap_status("s-icap-status", null, "status", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setSIcapStatus",CharSequence.class, "ICAP response status", 1, true),
  x_bluecoat_surfcontrol_category_id("x-bluecoat-surfcontrol-category-id", null, "status", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXBluecoatSurfcontrolCategoryId",CharSequence.class, "The SurfControl specific content category ID.", 1, true),
  x_bluecoat_surfcontrol_is_denied("x-bluecoat-surfcontrol-is-denied", null, "status", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXBluecoatSurfcontrolIsDenied",CharSequence.class, "1' if the transaction was denied, else '0'", 1, true),
  x_bluecoat_surfcontrol_is_proxied("x-bluecoat-surfcontrol-is-proxied", null, "status", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXBluecoatSurfcontrolIsProxied",CharSequence.class, "0' if transaction is explicitly proxied, '1' if transaction is transparently proxied", 1, true),
  x_bluecoat_surfcontrol_reporter_id("x-bluecoat-surfcontrol-reporter-id", null, "status", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXBluecoatSurfcontrolReporterId",CharSequence.class, "Specialized value for SurfControl reporter", 1, true),
  x_bluecoat_surfcontrol_reporter_v4("x-bluecoat-surfcontrol-reporter-v4", null, "status", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXBluecoatSurfcontrolReporterV4",CharSequence.class, "The SurfControl Reporter v4 format", 1, true),
  x_bluecoat_surfcontrol_reporter_v5("x-bluecoat-surfcontrol-reporter-v5", null, "status", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXBluecoatSurfcontrolReporterV5",CharSequence.class, "The SurfControl Reporter v5 format", 1, true),
  x_bluecoat_websense_category_id("x-bluecoat-websense-category-id", null, "status", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXBluecoatWebsenseCategoryId",CharSequence.class, "The Websense specific content category ID", 1, true),
  x_bluecoat_websense_keyword("x-bluecoat-websense-keyword", null, "status", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXBluecoatWebsenseKeyword",CharSequence.class, "The Websense specific keyword", 1, true),
  x_bluecoat_websense_reporter_id("x-bluecoat-websense-reporter-id", null, "status", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXBluecoatWebsenseReporterId",CharSequence.class, "The Websense specific reporter category ID", 1, true),
  x_bluecoat_websense_status("x-bluecoat-websense-status", null, "status", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXBluecoatWebsenseStatus",CharSequence.class, "The Websense specific numeric status", 1, true),
  x_bluecoat_websense_user("x-bluecoat-websense-user", null, "status", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXBluecoatWebsenseUser",CharSequence.class, "The Webs ense form of the username", 1, true),
  x_bluecoat_websense_reporter_protocol_3("x-bluecoat-websense-reporter-protocol-3", null, "status", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXBluecoatWebsenseReporterProtocol3",CharSequence.class, "The Websense reporter format protocol version 3", 1, true),
  x_exception_company_name("x-exception-company-name", null, "status", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXExceptionCompanyName",CharSequence.class, "The company name configured under exceptions", 1, true),
  x_exception_contact("x-exception-contact", null, "status", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXExceptionContact",CharSequence.class, "Describes who to contact when certain classes of exceptions occur, configured under exceptions (empty if the transaction has not been terminated)", 1, true),
  x_exception_details("x-exception-details", null, "status", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXExceptionDetails",CharSequence.class, "The configurable details of a selected policy-aware response page (empty if the transaction has not been terminated)", 1, true),
  x_exception_header("x-exception-header", null, "status", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXExceptionHeader",CharSequence.class, "The header to be associated with an exception response (empty if the transaction has not been terminated)", 1, true),
  x_exception_help("x-exception-help", null, "status", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXExceptionHelp",CharSequence.class, "Help text that accompanies the exception resolved (empty if the transaction has not been terminated)", 1, true),
  x_exception_id("x-exception-id", null, "status", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXExceptionId",CharSequence.class, "Identifier of the exception resolved (empty if the transaction has not been terminated)", 1, true),
  x_exception_last_error("x-exception-last-error", null, "status", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXExceptionLastError",CharSequence.class, "The last error recorded for the current transaction. This can provide insight when unexpected problems are occurring (empty if the transaction has not been terminated)", 1, true),
  x_exception_reason("x-exception-reason", null, "status", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXExceptionReason",CharSequence.class, "Indicates the reason why a particular request was terminated (empty if the transaction has not been terminated)", 1, true),
  x_exception_sourcefile("x-exception-sourcefile", null, "status", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXExceptionSourcefile",CharSequence.class, "Source filename from which the exception was generated (empty if the transaction has not been terminated)", 1, true),
  x_exception_sourceline("x-exception-sourceline", null, "status", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXExceptionSourceline",CharSequence.class, "Source file line number from which the exception was generated (empty if the transaction has not been terminated)", 1, true),
  x_exception_summary("x-exception-summary", null, "status", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXExceptionSummary",CharSequence.class, "Summary of the exception resolved (empty if the transaction has not been terminated)", 1, true),
  x_exception_category_review_message("x-exception-category-review-message", null, "status", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXExceptionCategoryReviewMessage",CharSequence.class, "Exception page message that includes a link allowing content categorization to be reviewed and/or disputed.", 1, true),
  x_exception_category_review_url("x-exception-category-review-url", null, "status", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXExceptionCategoryReviewUrl",CharSequence.class, "URL where content categorizations can be reviewed and/or disputed.", 1, true),
  x_patience_javascript("x-patience-javascript", null, "status", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXPatienceJavascript",CharSequence.class, "Javascript required to allow patience responses", 1, true),
  x_patience_progress("x-patience-progress", null, "status", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXPatienceProgress",CharSequence.class, "The progress of the patience request", 1, true),
  x_patience_time("x-patience-time", null, "status", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXPatienceTime",CharSequence.class, "The elapsed time of the patience request", 1, true),
  x_patience_url("x-patience-url", null, "status", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXPatienceUrl",CharSequence.class, "The url to be requested for more patience information", 1, true),
  x_virus_id("x-virus-id", null, "status", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXVirusId",CharSequence.class, "Identifier of a virus if one was detected", 1, true),
  x_virus_details("x-virus-details", null, "status", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXVirusDetails",CharSequence.class, "Details of a virus if one was detected", 1, true),
  x_icap_error_code("x-icap-error-code", null, "status", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXIcapErrorCode",CharSequence.class, "ICAP error code", 1, true),
  x_icap_error_details("x-icap-error-details", null, "status", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXIcapErrorDetails",CharSequence.class, "ICAP error details", 1, true),
  audiocodec("audiocodec", null, "Streaming", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setAudiocodec",CharSequence.class, "Audio codec used in stream.", 1, true),
  avgbandwidth("avgbandwidth", null, "Streaming", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setAvgbandwidth",CharSequence.class, "Average bandwidth (in bits per second) at which the client was connected to the server.", 1, true),
  channelURL("channelURL", null, "Streaming", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setChannelURL",CharSequence.class, "URL to the .nsc file", 1, true),
  c_buffercount("c-buffercount", null, "Streaming", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setCBuffercount", Integer.class, "Number of times the client buffered while playing the stream", 1, true),
  c_bytes("c-bytes", null, "Streaming", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setCBytes", Integer.class, "An MMS-only value of the total number of bytes delivered to the client.", 1, true),
  c_cpu("c-cpu", null, "Streaming", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setCCpu",CharSequence.class, "Client computer CPU type.", 1, true),
  c_hostexe("c-hostexe", null, "Streaming", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setCHostexe",CharSequence.class, "Host application", 1, true),
  c_hostexever("c-hostexever", null, "Streaming", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setCHostexever",CharSequence.class, "Host application version number", 1, true),
  c_os("c-os", null, "Streaming", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setCOs",CharSequence.class, "Client computer operating system", 1, true),
  c_osversion("c-osversion", null, "Streaming", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setCOsversion",CharSequence.class, "Client computer operating system version numbe", 1, true),
  c_playerid("c-playerid", null, "Streaming", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setCPlayerid",CharSequence.class, "Globally unique identifier (GUID) of the player", 1, true),
  c_playerlanguage("c-playerlanguage", null, "Streaming", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setCPlayerlanguage",CharSequence.class, "Client language-country code", 1, true),
  c_playerversion("c-playerversion", null, "Streaming", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setCPlayerversion",CharSequence.class, "Version number of the player", 1, true),
  c_rate("c-rate", null, "Streaming", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setCRate",CharSequence.class, "Mode of Windows Media Player when the last command event was sent", 1, true),
  c_starttime("c-starttime", null, "Streaming", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setCStarttime",CharSequence.class, "Timestamp (in seconds) of the stream when an entry is generated in the log file.", 1, true),
  c_status("c-status", null, "Streaming", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setCStatus",CharSequence.class, "Codes that describe client status", 1, true),
  c_totalbuffertime("c-totalbuffertime", null, "Streaming", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setCTotalbuffertime",CharSequence.class, "Time (in seconds) the client used to buffer the stream", 1, true),
  filelength("filelength", null, "Streaming", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setFilelength",CharSequence.class, "Length of the file (in seconds).", 1, true),
  filesize("filesize", null, "Streaming", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setFilesize",CharSequence.class, "Size of the file (in bytes).", 1, true),
  protocol_("protocol", null, "Streaming", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setProtocol",CharSequence.class, "Protocol used to access the stream: mms, http, or asfm.", 1, true),
  s_sessionid("s-sessionid", null, "Streaming", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setSSessionid",CharSequence.class, "Session ID for the streaming session", 1, true),
  s_totalclients("s-totalclients", null, "Streaming", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setSTotalclients",CharSequence.class, "Clients connected to the server (but not necessarily receiving streams)", 1, true),
  transport("transport", null, "Streaming", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setTransport",CharSequence.class, "Transport protocol used (UDP, TCP, multicast, etc.)", 1, true),
  videocodec("videocodec", null, "Streaming", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setVideocodec",CharSequence.class, "Video codec used to encode the stream.", 1, true),
  x_cache_info("x-cache-info", null, "Streaming", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXCacheInfo",CharSequence.class, "Values: UNKNOWN,DEMAND_PASSTHRU, DEMAND_MISS, DEMAND_HIT, LIVE_PASSTHRU, LIVE_SPLIT", 1, true),
  x_duration("x-duration", null, "Streaming", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXDuration",CharSequence.class, "Length of time a client played content prior to a client event (FF, REW, Pause, Stop, or jump to marker).", 1, true),
  x_wm_c_dns("x-wm-c-dns", null, "Streaming", Arrays.<MefFieldConstrait>asList(new InetNameOrIpConstraint()),
          "setXWmCDns",CharSequence.class, "Hostname of the client determined from the Windows Media protocol", 1, true),
  x_wm_c_ip("x-wm-c-ip", null, "Streaming", Arrays.<MefFieldConstrait>asList(new MefInetAddressConstraint()),
          "setXWmCIp",CharSequence.class, "The client IP address determined from the Windows Media protocol", 1, true),
  x_cs_streaming_client("x-cs-streaming-client", null, "Streaming", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXCsStreamingClient",CharSequence.class, "Type of streaming client in use (windows_media, real_media, or quicktime).", 1, true),
  x_rs_streaming_content("x-rs-streaming-content", null, "Streaming", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXRsStreamingContent",CharSequence.class, "Type of streaming content served. (e.g. windows_media, quicktime)", 1, true),
  x_streaming_bitrate("x-streaming-bitrate", null, "Streaming", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXStreamingBitrate",CharSequence.class, "The reported client-side bitrate for the stream", 1, true),
  connect_time("connect-time", null, "time", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setConnectTime", Integer.class, "Total ms required to connect to the origin server", 1, true),
  date("date", null, "time", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setDate",CharSequence.class, "GMT Date in YYYY-MM-DD format", 1, true),
  dnslookup_time("dnslookup-time", null, "time", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setDnslookupTime",CharSequence.class, "Total ms cache required to perform the DNS lookup", 1, true),
  duration("duration", null, "time", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setDuration",CharSequence.class, "Time taken (in seconds) to process the request", 1, true),
  gmttime("gmttime", null, "time", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setGmttime",CharSequence.class, "GMT date and time of the user request in format: [DD/MM/YYY:hh:mm:ss GMT]", 1, true),
  x_bluecoat_day_utc("x-bluecoat-day-utc", null, "time", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setXBluecoatDayUtc", Integer.class, "GMT/UTC day (as a number) formatted to take up two spaces (e.g. 07 for the 7th of the month)", 1, true),
  x_bluecoat_hour_utc("x-bluecoat-hour-utc", null, "time", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXBluecoatHourUtc",CharSequence.class, "GMT/UTC hour formatted to always take up two spaces (e.g. 01 for 1AM)", 1, true),
  x_bluecoat_minute_utc("x-bluecoat-minute-utc", null, "time", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXBluecoatMinuteUtc",CharSequence.class, "GMT/UTC minute formatted to always take up two spaces (e.g. 01 for 1 minute past)", 1, true),
  x_bluecoat_month_utc("x-bluecoat-month-utc", null, "time", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setXBluecoatMonthUtc", Integer.class, "GMT/UTC month (as a number) formatted to take up two spaces (e.g. 01 for January)", 1, true),
  x_bluecoat_monthname_utc("x-bluecoat-monthname-utc", null, "time", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXBluecoatMonthnameUtc",CharSequence.class, "GMT/UTC month in the short-form string representation (e.g. Jan for January)", 1, true),
  x_bluecoat_second_utc("x-bluecoat-second-utc", null, "time", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXBluecoatSecondUtc",CharSequence.class, "GMT/UTC second formatted to always take up two spaces (e.g. 01 for 1 second past)", 1, true),
  x_bluecoat_weekday_utc("x-bluecoat-weekday-utc", null, "time", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXBluecoatWeekdayUtc",CharSequence.class, "GMT/UTC weekday in the short-form string representation (e.g. Mon for Monday)", 1, true),
  x_bluecoat_year_utc("x-bluecoat-year-utc", null, "time", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXBluecoatYearUtc",CharSequence.class, "GMT/UTC year formatted to always take up four spaces", 1, true),
  localtime("localtime", null, "time", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setLocaltime",CharSequence.class, "Local date and time of the user request in format: [DD/MMM/YYYY:hh:mm:ss +nnnn]", 1, true),
  x_bluecoat_day("x-bluecoat-day", null, "time", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setXBluecoatDay", Integer.class, "Localtime day (as a number) formatted to take up two spaces (e.g. 07 for the 7th of the month)", 1, true),
  x_bluecoat_hour("x-bluecoat-hour", null, "time", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXBluecoatHour",CharSequence.class, "Localtime hour formatted to always take up two spaces (e.g. 01 for 1AM)", 1, true),
  x_bluecoat_minute("x-bluecoat-minute", null, "time", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXBluecoatMinute",CharSequence.class, "Localtime minute formatted to always take up two spaces (e.g. 01 for 1 minute past)", 1, true),
  x_bluecoat_month("x-bluecoat-month", null, "time", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setXBluecoatMonth", Integer.class, "Localtime month (as a number) formatted to take up two spaces (e.g. 01 for January)", 1, true),
  x_bluecoat_monthname("x-bluecoat-monthname", null, "time", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXBluecoatMonthname",CharSequence.class, "Localtime month in the shortform string representation (e.g. Jan for January)", 1, true),
  x_bluecoat_second("x-bluecoat-second", null, "time", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXBluecoatSecond",CharSequence.class, "Localtime second formatted to always take up two spaces (e.g. 01 for 1 second past)", 1, true),
  x_bluecoat_weekday("x-bluecoat-weekday", null, "time", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXBluecoatWeekday",CharSequence.class, "Localtime weekday in the short-form string representation (e.g. Mon for Monday)", 1, true),
  x_bluecoat_year("x-bluecoat-year", null, "time", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXBluecoatYear",CharSequence.class, "Localtime year formatted to always take up four spaces", 1, true),
  time("time", null, "time", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setTime",CharSequence.class, "GMT time in HH:MM:SS format", 1, true),
  timestamp("timestamp", null, "time", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setTimestamp",CharSequence.class, "Unix type timestamp", 1, true),
  time_taken("time-taken", WebProxyMefField.deviceCustomString2, "time", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setTimeTaken", Integer.class, "Time taken (in milliseconds) to process the request", 1, true),
  rs_time_taken("rs-time-taken", null, "time", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setRsTimeTaken", Integer.class, "Total time taken (in milliseconds) to send the request and receive the response from the origin server", 1, true),
  x_bluecoat_end_time_wft("x-bluecoat-end-time-wft", null, "time", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXBluecoatEndTimeWft",CharSequence.class, "End local time of the transaction represented as a windows file time", 1, true),
  x_bluecoat_start_time_wft("x-bluecoat-start-time-wft", null, "time", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXBluecoatStartTimeWft",CharSequence.class, "Start local time of the transaction represented as a windows file time", 1, true),
  x_bluecoat_end_time_mssql("x-bluecoat-end-time-mssql", null, "time", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXBluecoatEndTimeMssql",CharSequence.class, "End local time of the transaction represented as a serial date time", 1, true),
  x_bluecoat_start_time_mssql("x-bluecoat-start-time-mssql", null, "time", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXBluecoatStartTimeMssql",CharSequence.class, "Start local time of the transaction represented as a serial date time", 1, true),
  x_cookie_date("x-cookie-date", null, "time", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXCookieDate",CharSequence.class, "Current date in Cookie time format", 1, true),
  x_http_date("x-http-date", null, "time", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXHttpDate",CharSequence.class, "Current date in HTTP time format", 1, true),
  x_timestamp_unix("x-timestamp-unix", null, "time", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXTimestampUnix",CharSequence.class, "Seconds since UNIX epoch (Jan 1, 1970) (local time)", 1, true),
  x_timestamp_unix_utc("x-timestamp-unix-utc", null, "time", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXTimestampUnixUtc",CharSequence.class, "Seconds since UNIX epoch (Jan 1, 1970) (GMT/UTC)", 1, true),
  cs_categorization_time_dynamic("cs-categorization-time-dynamic", null, "time", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setCsCategorizationTimeDynamic",CharSequence.class, "Time taken (in milliseconds) to dynamically categorize the request URL", 1, true),
  cs_host("cs-host", WebProxyMefField.destinationNameOrIp, "url", Arrays.<MefFieldConstrait>asList(new InetNameOrIpConstraint()),
          "setCsHost",CharSequence.class, "Hostname from the client's request URL. If URL rewrite policies are used, this field's value is derived from the 'log' URL", 1, true),
  cs_uri("cs-uri", null, "url", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setCsUri",CharSequence.class, "The 'log' URL.", 1, true),
  cs_uri_address("cs-uri-address", WebProxyMefField.destinationAddress, "url", Arrays.<MefFieldConstrait>asList(new MefInetAddressConstraint()),
          "setCsUriAddress",CharSequence.class, "IP address from the 'log' URL. DNS is used if URL uses a hostname.", 1, true),
  cs_uri_extension("cs-uri-extension", null, "url", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setCsUriExtension",CharSequence.class, "Document extension from the 'log' URL.", 1, true),
  cs_uri_host("cs-uri-host", null, "url", Arrays.<MefFieldConstrait>asList(new InetNameOrIpConstraint()),
          "setCsUriHost",CharSequence.class, "Hostname from the 'log' URL.", 1, true),
  cs_uri_hostname("cs-uri-hostname", null, "url", Arrays.<MefFieldConstrait>asList(new InetNameOrIpConstraint()),
          "setCsUriHostname",CharSequence.class, "Hostname from the 'log' URL. RDNS is used if the URL uses an IP address", 1, true),
  cs_uri_path("cs-uri-path", WebProxyMefField.requestPath, "url", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setCsUriPath",CharSequence.class, "Path from the 'log' URL. Does not include query.", 1, true),
  cs_uri_pathquery("cs-uri-pathquery", null, "url", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setCsUriPathquery",CharSequence.class, "Path and query from the 'log' URL.", 1, true),
  cs_uri_port("cs-uri-port", WebProxyMefField.destinationPort, "url", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setCsUriPort", Integer.class, "Port from the 'log' URL.", 1, true),
  cs_uri_query("cs-uri-query", WebProxyMefField.requestQuery, "url", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setCsUriQuery",CharSequence.class, "Query from the 'log' URL", 1, true),
  cs_uri_scheme("cs-uri-scheme", WebProxyMefField.requestScheme, "url", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setCsUriScheme",CharSequence.class, "Scheme from the 'log' URL.", 1, true),
  cs_uri_stem("cs-uri-stem", null, "url", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setCsUriStem",CharSequence.class, "Stem from the 'log' URL. The stem includes everything up to the end of path, but does not include the query", 1, true),
  c_uri("c-uri", null, "url", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setCUri",CharSequence.class, "The original URL requested.", 1, true),
  c_uri_address("c-uri-address", WebProxyMefField.destinationAddress, "url", Arrays.<MefFieldConstrait>asList(new MefInetAddressConstraint()),
          "setCUriAddress",CharSequence.class, "IP address from the original URL requested. DNS is used if the URL is expressed as a hostname.", 1, true),
  c_uri_cookie_domain("c-uri-cookie-domain", null, "url", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setCUriCookieDomain",CharSequence.class, "The cookie domain of the original URL requested", 1, true),
  c_uri_extension("c-uri-extension", null, "url", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setCUriExtension",CharSequence.class, "Document extension from the original URL requested", 1, true),
  c_uri_host("c-uri-host", null, "url", Arrays.<MefFieldConstrait>asList(new InetNameOrIpConstraint()),
          "setCUriHost",CharSequence.class, "Hostname from the original URL requested", 1, true),
  c_uri_hostname("c-uri-hostname", null, "url", Arrays.<MefFieldConstrait>asList(new InetNameOrIpConstraint()),
          "setCUriHostname",CharSequence.class, "Hostname from the original URL requested. RDNS is used if the URL is expressed as an IP address", 1, true),
  c_uri_path("c-uri-path", null, "url", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setCUriPath",CharSequence.class, "Path of the original URL requested without query.", 1, true),
  c_uri_pathquery("c-uri-pathquery", null, "url", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setCUriPathquery",CharSequence.class, "Path and query of the original URL requested", 1, true),
  c_uri_port("c-uri-port", null, "url", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setCUriPort", Integer.class, "Port from the original URL requested", 1, true),
  c_uri_query("c-uri-query", null, "url", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setCUriQuery",CharSequence.class, "Query from the original URL requested", 1, true),
  c_uri_scheme("c-uri-scheme", null, "url", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setCUriScheme",CharSequence.class, "Scheme of the original URL requested", 1, true),
  c_uri_stem("c-uri-stem", null, "url", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setCUriStem",CharSequence.class, "Stem of the original URL requested", 1, true),
  sr_uri("sr-uri", null, "url", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setSrUri",CharSequence.class, "URL of the upstream request", 1, true),
  sr_uri_address("sr-uri-address", null, "url", Arrays.<MefFieldConstrait>asList(new MefInetAddressConstraint()),
          "setSrUriAddress",CharSequence.class, "IP address from the URL used in the upstream request. DNS is used if the URL is expressed as a hostname", 1, true),
  sr_uri_extension("sr-uri-extension", null, "url", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setSrUriExtension",CharSequence.class, "Document extension from the URL used in the upstream request", 1, true),
  sr_uri_host("sr-uri-host", null, "url", Arrays.<MefFieldConstrait>asList(new InetNameOrIpConstraint()),
          "setSrUriHost",CharSequence.class, "Hostname from the URL used in the upstream request", 1, true),
  sr_uri_hostname("sr-uri-hostname", null, "url", Arrays.<MefFieldConstrait>asList(new InetNameOrIpConstraint()),
          "setSrUriHostname",CharSequence.class, "Hostname from the URL used in the upstream request. RDNS is used if the URL is expressed as an IP address.", 1, true),
  sr_uri_path("sr-uri-path", null, "url", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setSrUriPath",CharSequence.class, "Path from the upstream request URL", 1, true),
  sr_uri_pathquery("sr-uri-pathquery", null, "url", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setSrUriPathquery",CharSequence.class, "Path and query from the upstream request URL", 1, true),
  sr_uri_port("sr-uri-port", null, "url", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setSrUriPort", Integer.class, "Port from the URL used in the upstream request.", 1, true),
  sr_uri_query("sr-uri-query", null, "url", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setSrUriQuery",CharSequence.class, "Query from the upstream request URL", 1, true),
  sr_uri_scheme("sr-uri-scheme", null, "url", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setSrUriScheme",CharSequence.class, "Scheme from the URL used in the upstream request", 1, true),
  sr_uri_stem("sr-uri-stem", null, "url", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setSrUriStem",CharSequence.class, "Path from the upstream request URL", 1, true),
  s_uri("s-uri", null, "url", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setSUri",CharSequence.class, "The URL used for cache access", 1, true),
  s_uri_address("s-uri-address", null, "url", Arrays.<MefFieldConstrait>asList(new MefInetAddressConstraint()),
          "setSUriAddress",CharSequence.class, "IP address from the URL used for cache access. DNS is used if the URL is expressed as a hostname", 1, true),
  s_uri_extension("s-uri-extension", null, "url", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setSUriExtension",CharSequence.class, "Document extension from the URL used for cache access", 1, true),
  s_uri_host("s-uri-host", null, "url", Arrays.<MefFieldConstrait>asList(new InetNameOrIpConstraint()),
          "setSUriHost",CharSequence.class, "Hostname from the URL used for cache access", 1, true),
  s_uri_hostname("s-uri-hostname", null, "url", Arrays.<MefFieldConstrait>asList(new InetNameOrIpConstraint()),
          "setSUriHostname",CharSequence.class, "Hostname from the URL used for cache access. RD NS is used if the URL uses an IP address", 1, true),
  s_uri_path("s-uri-path", null, "url", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setSUriPath",CharSequence.class, "Path of the URL used for cache access", 1, true),
  s_uri_pathquery("s-uri-pathquery", null, "url", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setSUriPathquery",CharSequence.class, "Path and query of the URL used for cache access", 1, true),
  s_uri_port("s-uri-port", null, "url", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setSUriPort", Integer.class, "Port from the URL used for cache access", 1, true),
  s_uri_query("s-uri-query", null, "url", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setSUriQuery",CharSequence.class, "Query string of the URL used for cache access", 1, true),
  s_uri_scheme("s-uri-scheme", null, "url", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setSUriScheme",CharSequence.class, "Scheme from the URL used for cache access", 1, true),
  s_uri_stem("s-uri-stem", null, "url", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setSUriStem",CharSequence.class, "Stem of the URL used for cache access", 1, true),
  x_cs0_Referer_0_uri("x-cs(Referer)-uri", WebProxyMefField.requestReferer, "url", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXCs0Referer0Uri",CharSequence.class, "The URL from the Referer header", 1, true),
  x_cs0_Referer_0_uri_address("x-cs(Referer)-uri-address", null, "url", Arrays.<MefFieldConstrait>asList(new MefInetAddressConstraint()),
          "setXCs0Referer0UriAddress",CharSequence.class, "IP address from the 'Referer' URL. DNS is used if URL uses a hostname", 1, true),
  x_cs0_Referer_0_uri_extension("x-cs(Referer)-uri-extension", null, "url", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXCs0Referer0UriExtension",CharSequence.class, "Document extension from the 'Referer' URL.", 1, true),
  x_cs0_Referer_0_uri_host("x-cs(Referer)-uri-host", null, "url", Arrays.<MefFieldConstrait>asList(new InetNameOrIpConstraint()),
          "setXCs0Referer0UriHost",CharSequence.class, "Hostname from the 'Referer' URL", 1, true),
  x_cs0_Referer_0_uri_hostname("x-cs(Referer)-uri-hostname", null, "url", Arrays.<MefFieldConstrait>asList(new InetNameOrIpConstraint()),
          "setXCs0Referer0UriHostname",CharSequence.class, "Hostname from the 'Referer' URL. RDNS is used if the URL uses an IP address", 1, true),
  x_cs0_Referer_0_uri_path("x-cs(Referer)-uri-path", null, "url", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXCs0Referer0UriPath",CharSequence.class, "Path from the 'Referer' URL. Does not include query.", 1, true),
  x_cs0_Referer_0_uri_pathquery("x-cs(Referer)-uri-pathquery", null, "url", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXCs0Referer0UriPathquery",CharSequence.class, "Path and query from the 'Referer' URL", 1, true),
  x_cs0_Referer_0_uri_port("x-cs(Referer)-uri-port", null, "url", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setXCs0Referer0UriPort", Integer.class, "Port from the 'Referer' URL", 1, true),
  x_cs0_Referer_0_uri_query("x-cs(Referer)-uri-query", null, "url", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXCs0Referer0UriQuery",CharSequence.class, "Query from the 'Referer' URL", 1, true),
  x_cs0_Referer_0_uri_scheme("x-cs(Referer)-uri-scheme", null, "url", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXCs0Referer0UriScheme",CharSequence.class, "Scheme from the 'Referer' URL", 1, true),
  x_cs0_Referer_0_uri_stem("x-cs(Referer)-uri-stem", null, "url", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXCs0Referer0UriStem",CharSequence.class, "Stem from the 'Referer' URL. The stem includes everything up to the end of path, but does not include the query.", 1, true),
  x_cs_raw_uri("x-cs-raw-uri", null, "url", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXCsRawUri",CharSequence.class, "The 'raw' request URL", 1, true),
  x_cs_raw_uri_host("x-cs-raw-uri-host", null, "url", Arrays.<MefFieldConstrait>asList(new InetNameOrIpConstraint()),
          "setXCsRawUriHost",CharSequence.class, "Hostname from the 'raw' URL.", 1, true),
  x_cs_raw_uri_port("x-cs-raw-uri-port", null, "url", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setXCsRawUriPort", Integer.class, "Port string from the 'raw' URL.", 1, true),
  x_cs_raw_uri_scheme("x-cs-raw-uri-scheme", null, "url", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXCsRawUriScheme",CharSequence.class, "Scheme string from the 'raw' URL", 1, true),
  x_cs_raw_uri_path("x-cs-raw-uri-path", null, "url", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXCsRawUriPath",CharSequence.class, "Path from the 'raw' request URL. Does not include query.", 1, true),
  x_cs_raw_uri_pathquery("x-cs-raw-uri-pathquery", null, "url", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXCsRawUriPathquery",CharSequence.class, "Path and query from the 'raw' request URL", 1, true),
  x_cs_raw_uri_query("x-cs-raw-uri-query", null, "url", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXCsRawUriQuery",CharSequence.class, "Query from the 'raw' request URL", 1, true),
  x_cs_raw_uri_stem("x-cs-raw-uri-stem", null, "url", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXCsRawUriStem",CharSequence.class, "Stem from the 'raw' request URL. The stem includes everything up to the end of path, but does not include the query", 1, true),
  cs_auth_group("cs-auth-group", null, "user", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setCsAuthGroup",CharSequence.class, "One group that an authenticated user belongs to. If a user belongs to multiple groups, the group logged is determined by the Group Log Order configuration specified in VPM. If Group Log Order is not specified, an arbitrary group is logged. Note that only groups referenced by policy are considered", 1, true),
  cs_auth_groups("cs-auth-groups", null, "user", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setCsAuthGroups",CharSequence.class, "List of groups that an authenticated user belongs to. Note that only groups referenced by policy are included", 1, true),
  cs_auth_type("cs-auth-type", null, "user", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setCsAuthType",CharSequence.class, "Client-side: authentication type (basic, ntlm, etc.)", 1, true),
  cs_realm("cs-realm", null, "user", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setCsRealm",CharSequence.class, "Authentication realm that the user was challenged in.", 1, true),
  cs_user("cs-user", null, "user", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setCsUser",CharSequence.class, "Qualified username for NTLM. Relative username for other protocols", 1, true),
  cs_userdn("cs-userdn", null, "user", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setCsUserdn",CharSequence.class, "Full username of a client authenticated to the proxy (fully distinguished)", 1, true),
  x_cs_user_authorization_name("x-cs-user-authorization-name", null, "user", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXCsUserAuthorizationName",CharSequence.class, "Username used to authorize a client authenticated to the proxy", 1, true),
  x_cs_user_credential_name("x-cs-user-credential-name", null, "user", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXCsUserCredentialName",CharSequence.class, "Username entered by the user to authenticate to the proxy", 1, true),
  cs_username("cs-username", WebProxyMefField.sourceUserName, "user", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setCsUsername",CharSequence.class, "Relative username of a client authenticated to the proxy (i.e. not fully distinguished)", 1, true),
  sc_auth_status("sc-auth-status", null, "user", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setScAuthStatus",CharSequence.class, "Client-side: Authorization status", 1, true),
  x_agent_sso_cookie("x-agent-sso-cookie", null, "user", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXAgentSsoCookie",CharSequence.class, "The authentication agent single signon cookie", 1, true),
  x_cache_user("x-cache-user", null, "user", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXCacheUser",CharSequence.class, "Relative username of a client authenticated to the proxy (i.e. not fully distinguished) (same as cs-username)", 1, true),
  x_cs_auth_domain("x-cs-auth-domain", null, "user", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXCsAuthDomain",CharSequence.class, "The domain of the authenticated user.", 1, true),
  x_sc_authentication_error("x-sc-authentication-error", null, "user", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXScAuthenticationError",CharSequence.class, "The user authentication error.", 1, true),
  x_sc_authorization_error("x-sc-authorization-error", null, "user", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXScAuthorizationError",CharSequence.class, "The user authorization error.", 1, true),
  x_cs_user_type("x-cs-user-type", null, "user", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXCsUserType",CharSequence.class, "The type of authenticated user.", 1, true),
  x_cs_auth_form_action_url("x-cs-auth-form-action-url", null, "user", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXCsAuthFormActionUrl",CharSequence.class, "The URL to submit the authentication form to.", 1, true),
  x_cs_auth_form_domain_field("x-cs-auth-form-domain-field", null, "user", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXCsAuthFormDomainField",CharSequence.class, "The authentication form input field for the user's domain.", 1, true),
  x_cs_auth_form_empty_domain_field("x-cs-auth-form-empty-domain-field", null, "user", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXCsAuthFormEmptyDomainField",CharSequence.class, "The empty authentication form input field for the user’s domain.", 1, true),
  x_cs_auth_request_id("x-cs-auth-request-id", null, "user", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXCsAuthRequestId",CharSequence.class, "The bas64 encoded string containing the original request information during forms based authentication", 1, true),
  x_cs_username_or_ip("x-cs-username-or-ip", null, "user", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXCsUsernameOrIp",CharSequence.class, "Used to identify the user using either their authenticated proxy username or, if that is unavailable, their IP address.", 1, true),
  x_radius_splash_session_id("x-radius-splash-session-id", null, "user", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXRadiusSplashSessionId",CharSequence.class, "Session ID made available through RADIUS when configured for session management", 1, true),
  x_radius_splash_username("x-radius-splash-username", null, "user", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXRadiusSplashUsername",CharSequence.class, "Username m ade available through RADIUS when configured for session management", 1, true),
  x_user_x509_issuer("x-user-x509-issuer", null, "user", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXUserX509Issuer",CharSequence.class, "If the user was authenticated via an X.509 certificate, this is the issuer of the certificate as an RFC2253 DN", 1, true),
  x_user_x509_serial_number("x-user-x509-serial-number", null, "user", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXUserX509SerialNumber",CharSequence.class, "If the user was authenticated via an X.509 certificate, this is the serial number from the certificate as a hexadecimal number.", 1, true),
  x_user_x509_subject("x-user-x509-subject", null, "user", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXUserX509Subject",CharSequence.class, "If the user was authenticated via an X.509 certificate, this is the subject of the certificate as an RFC2253 DN", 1, true),
  x_auth_challenge_string("x-auth-challenge-string", null, "user", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXAuthChallengeString",CharSequence.class, "The authentication challenge to display to the user.", 1, true),
  x_auth_private_challenge_state("x-auth-private-challenge-state", null, "user", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXAuthPrivateChallengeState",CharSequence.class, "The private state required to manage an authentication challenge", 1, true),
  x_cs_user_login_time("x-cs-user-login-time", null, "user", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setXCsUserLoginTime", Integer.class, "The number of seconds the user had been logged in.", 1, true),
  x_cs_user_login_count("x-cs-user-login-count", null, "user", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setXCsUserLoginCount", Integer.class, "The number of workstations the user is currently logged in at", 1, true),
  x_cs_client_address_login_count("x-cs-client-address-login-count", null, "user", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setXCsClientAddressLoginCount", Integer.class, "The number of users currently logged in at the client ip address", 1, true),
  x_cs_user_login_address("x-cs-user-login-address", null, "user", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXCsUserLoginAddress",CharSequence.class, "The ip address that the user was authenticated in.", 1, true),
  x_ldap_attribute0_name_0("x-ldap-attribute(name)", null, "user", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setXLdapAttribute0Name0",CharSequence.class, "When used in an access log entry, it makes the named LDAP attribute interesting to all LDAP realms. When an access log is constructed, the value is obtained from the user object associated with the transaction and added to the access log record. The list of strings is converted to a single string. A single string is a concatenation of the strings in a comma separated list.", 1, true),
  cs0_Accept_0("cs(Accept)", null, "request_header", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setCs0Accept0",CharSequence.class, "Request header: Accept", 1, true),
  cs0_Accept_0_length("cs(Accept)-length", null, "request_header", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setCs0Accept0Length", Integer.class, "Length of HTTP request header: Accept", 1, true),
  cs0_Accept_0_count("cs(Accept)-count", null, "request_header", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setCs0Accept0Count", Integer.class, "Number of HTTP request header: Accept", 1, true),
  cs0_Accept_Charset_0("cs(Accept-Charset)", null, "request_header", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setCs0AcceptCharset0",CharSequence.class, "Request header: Accept-Charset", 1, true),
  cs0_Accept_Charset_0_length("cs(Accept-Charset)-length", null, "request_header", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setCs0AcceptCharset0Length", Integer.class, "Length of HTTP request header: Accept-Charset", 1, true),
  cs0_Accept_Charset_0_count("cs(Accept-Charset)-count", null, "request_header", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setCs0AcceptCharset0Count", Integer.class, "Number of HTTP request header: Accept-Charset", 1, true),
  cs0_Accept_Encoding_0("cs(Accept-Encoding)", null, "request_header", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setCs0AcceptEncoding0",CharSequence.class, "Request header: Accept-Encoding", 1, true),
  cs0_Accept_Encoding_0_length("cs(Accept-Encoding)-length", null, "request_header", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setCs0AcceptEncoding0Length", Integer.class, "Length of HTTP request header: Accept-Encoding", 1, true),
  cs0_Accept_Encoding_0_count("cs(Accept-Encoding)-count", null, "request_header", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setCs0AcceptEncoding0Count", Integer.class, "Number of HTTP request header: Accept-Encoding", 1, true),
  cs0_Accept_Language_0("cs(Accept-Language)", null, "request_header", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setCs0AcceptLanguage0",CharSequence.class, "Request header: Accept-Language", 1, true),
  cs0_Accept_Language_0_length("cs(Accept-Language)-length", null, "request_header", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setCs0AcceptLanguage0Length", Integer.class, "Length of HTTP request header: Accept-Language", 1, true),
  cs0_Accept_Language_0_count("cs(Accept-Language)-count", null, "request_header", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setCs0AcceptLanguage0Count", Integer.class, "Number of HTTP request header: Accept-Language", 1, true),
  cs0_Accept_Ranges_0("cs(Accept-Ranges)", null, "request_header", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setCs0AcceptRanges0",CharSequence.class, "Request header: Accept-Ranges", 1, true),
  cs0_Accept_Ranges_0_length("cs(Accept-Ranges)-length", null, "request_header", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setCs0AcceptRanges0Length", Integer.class, "Length of HTTP request header: Accept-Ranges", 1, true),
  cs0_Accept_Ranges_0_count("cs(Accept-Ranges)-count", null, "request_header", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setCs0AcceptRanges0Count", Integer.class, "Number of HTTP request header: Accept-Ranges", 1, true),
  cs0_Age_0("cs(Age)", null, "request_header", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setCs0Age0",CharSequence.class, "Request header: Age", 1, true),
  cs0_Age_0_length("cs(Age)-length", null, "request_header", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setCs0Age0Length", Integer.class, "Length of HTTP request header: Age", 1, true),
  cs0_Age_0_count("cs(Age)-count", null, "request_header", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setCs0Age0Count", Integer.class, "Number of HTTP request header: Age", 1, true),
  cs0_Allow_0("cs(Allow)", null, "request_header", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setCs0Allow0",CharSequence.class, "Request header: Allow", 1, true),
  cs0_Allow_0_length("cs(Allow)-length", null, "request_header", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setCs0Allow0Length", Integer.class, "Length of HTTP request header: Allow", 1, true),
  cs0_Allow_0_count("cs(Allow)-count", null, "request_header", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setCs0Allow0Count", Integer.class, "Number of HTTP request header: Allow", 1, true),
  cs0_Authentication_Info_0("cs(Authentication-Info)", null, "request_header", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setCs0AuthenticationInfo0",CharSequence.class, "Request header: Authentication-Info", 1, true),
  cs0_Authentication_Info_0_length("cs(Authentication-Info)-length", null, "request_header", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setCs0AuthenticationInfo0Length", Integer.class, "Length of HTTP request header: Authentication-Info", 1, true),
  cs0_Authentication_Info_0_count("cs(Authentication-Info)-count", null, "request_header", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setCs0AuthenticationInfo0Count", Integer.class, "Number of HTTP request header: Authentication-Info", 1, true),
  cs0_Authorization_0("cs(Authorization)", null, "request_header", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setCs0Authorization0",CharSequence.class, "Request header: Authorization", 1, true),
  cs0_Authorization_0_length("cs(Authorization)-length", null, "request_header", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setCs0Authorization0Length", Integer.class, "Length of HTTP request header: Authorization", 1, true),
  cs0_Authorization_0_count("cs(Authorization)-count", null, "request_header", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setCs0Authorization0Count", Integer.class, "Number of HTTP request header: Authorization", 1, true),
  cs0_Cache_Control_0("cs(Cache-Control)", null, "request_header", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setCs0CacheControl0",CharSequence.class, "Request header: Cache-Control", 1, true),
  cs0_Cache_Control_0_length("cs(Cache-Control)-length", null, "request_header", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setCs0CacheControl0Length", Integer.class, "Length of HTTP request header: Cache-Control", 1, true),
  cs0_Cache_Control_0_count("cs(Cache-Control)-count", null, "request_header", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setCs0CacheControl0Count", Integer.class, "Number of HTTP request header: Cache-Control", 1, true),
  cs0_Client_IP_0("cs(Client-IP)", null, "request_header", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setCs0ClientIP0",CharSequence.class, "Request header: Client-IP", 1, true),
  cs0_Client_IP_0_length("cs(Client-IP)-length", null, "request_header", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setCs0ClientIP0Length", Integer.class, "Length of HTTP request header: Client-IP", 1, true),
  cs0_Client_IP_0_count("cs(Client-IP)-count", null, "request_header", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setCs0ClientIP0Count", Integer.class, "Number of HTTP request header: Client-IP", 1, true),
  cs0_Connection_0("cs(Connection)", null, "request_header", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setCs0Connection0",CharSequence.class, "Request header: Connection", 1, true),
  cs0_Connection_0_length("cs(Connection)-length", null, "request_header", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setCs0Connection0Length", Integer.class, "Length of HTTP request header: Connection", 1, true),
  cs0_Connection_0_count("cs(Connection)-count", null, "request_header", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setCs0Connection0Count", Integer.class, "Number of HTTP request header: Connection", 1, true),
  cs0_Content_Disposition_0("cs(Content-Disposition)", null, "request_header", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setCs0ContentDisposition0",CharSequence.class, "Request header: Content-Disposition", 1, true),
  cs0_Content_Disposition_0_length("cs(Content-Disposition)-length", null, "request_header", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setCs0ContentDisposition0Length", Integer.class, "Length of HTTP request header: Content-Disposition", 1, true),
  cs0_Content_Disposition_0_count("cs(Content-Disposition)-count", null, "request_header", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setCs0ContentDisposition0Count", Integer.class, "Number of HTTP request header: Content-Disposition", 1, true),
  cs0_Content_Encoding_0("cs(Content-Encoding)", null, "request_header", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setCs0ContentEncoding0",CharSequence.class, "Request header: Content-Encoding", 1, true),
  cs0_Content_Encoding_0_length("cs(Content-Encoding)-length", null, "request_header", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setCs0ContentEncoding0Length", Integer.class, "Length of HTTP request header: Content-Encoding", 1, true),
  cs0_Content_Encoding_0_count("cs(Content-Encoding)-count", null, "request_header", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setCs0ContentEncoding0Count", Integer.class, "Number of HTTP request header: Content-Encoding", 1, true),
  cs0_Content_Language_0("cs(Content-Language)", null, "request_header", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setCs0ContentLanguage0",CharSequence.class, "Request header: Content-Language", 1, true),
  cs0_Content_Language_0_length("cs(Content-Language)-length", null, "request_header", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setCs0ContentLanguage0Length", Integer.class, "Length of HTTP request header: Content-Language", 1, true),
  cs0_Content_Language_0_count("cs(Content-Language)-count", null, "request_header", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setCs0ContentLanguage0Count", Integer.class, "Number of HTTP request header: Content-Language", 1, true),
  cs0_Content_Length_0("cs(Content-Length)", null, "request_header", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setCs0ContentLength0",CharSequence.class, "Request header: Content-Length", 1, true),
  cs0_Content_Length_0_length("cs(Content-Length)-length", null, "request_header", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setCs0ContentLength0Length", Integer.class, "Length of HTTP request header: Content-Length", 1, true),
  cs0_Content_Length_0_count("cs(Content-Length)-count", null, "request_header", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setCs0ContentLength0Count", Integer.class, "Number of HTTP request header: Content-Length", 1, true),
  cs0_Content_Location_0("cs(Content-Location)", null, "request_header", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setCs0ContentLocation0",CharSequence.class, "Request header: Content-Location", 1, true),
  cs0_Content_Location_0_length("cs(Content-Location)-length", null, "request_header", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setCs0ContentLocation0Length", Integer.class, "Length of HTTP request header: Content-Location", 1, true),
  cs0_Content_Location_0_count("cs(Content-Location)-count", null, "request_header", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setCs0ContentLocation0Count", Integer.class, "Number of HTTP request header: Content-Location", 1, true),
  cs0_Content_MD5_0("cs(Content-MD5)", null, "request_header", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setCs0ContentMD50",CharSequence.class, "Request header: Content-MD5", 1, true),
  cs0_Content_MD5_0_length("cs(Content-MD5)-length", null, "request_header", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setCs0ContentMD50Length", Integer.class, "Length of HTTP request header: Content-MD5", 1, true),
  cs0_Content_MD5_0_count("cs(Content-MD5)-count", null, "request_header", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setCs0ContentMD50Count", Integer.class, "Number of HTTP request header: Content-MD", 1, true),
  cs0_Content_Range_0("cs(Content-Range)", null, "request_header", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setCs0ContentRange0",CharSequence.class, "Request header: Content-Range", 1, true),
  cs0_Content_Range_0_length("cs(Content-Range)-length", null, "request_header", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setCs0ContentRange0Length", Integer.class, "Length of HTTP request header: Content-Range", 1, true),
  cs0_Content_Range_0_count("cs(Content-Range)-count", null, "request_header", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setCs0ContentRange0Count", Integer.class, "Number of HTTP request header: Content-Range", 1, true),
  cs0_Content_Type_0("cs(Content-Type)", null, "request_header", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setCs0ContentType0",CharSequence.class, "Request header: Content-Type", 1, true),
  cs0_Content_Type_0_length("cs(Content-Type)-length", null, "request_header", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setCs0ContentType0Length", Integer.class, "Length of HTTP request header: Content-Type", 1, true),
  cs0_Content_Type_0_count("cs(Content-Type)-count", null, "request_header", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setCs0ContentType0Count", Integer.class, "Number of HTTP request header: Content-Type", 1, true),
  cs0_Cookie_0("cs(Cookie)", null, "request_header", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setCs0Cookie0",CharSequence.class, "Request header: Cookie", 1, true),
  cs0_Cookie_0_length("cs(Cookie)-length", null, "request_header", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setCs0Cookie0Length", Integer.class, "Length of HTTP request header: Cookie", 1, true),
  cs0_Cookie_0_count("cs(Cookie)-count", null, "request_header", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setCs0Cookie0Count", Integer.class, "Number of HTTP request header: Cookie", 1, true),
  cs0_Cookie2_0("cs(Cookie2)", null, "request_header", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setCs0Cookie20",CharSequence.class, "Request header: Cookie2", 1, true),
  cs0_Cookie2_0_length("cs(Cookie2)-length", null, "request_header", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setCs0Cookie20Length", Integer.class, "Length of HTTP request header: Cookie2", 1, true),
  cs0_Cookie2_0_count("cs(Cookie2)-count", null, "request_header", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setCs0Cookie20Count", Integer.class, "Number of HTTP request header: Cookie2", 1, true),
  cs0_Date_0("cs(Date)", null, "request_header", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setCs0Date0",CharSequence.class, "Request header: Date", 1, true),
  cs0_Date_0_length("cs(Date)-length", null, "request_header", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setCs0Date0Length", Integer.class, "Length of HTTP request header: Date", 1, true),
  cs0_Date_0_count("cs(Date)-count", null, "request_header", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setCs0Date0Count", Integer.class, "Number of HTTP request header: Date", 1, true),
  cs0_Etag_0("cs(Etag)", null, "request_header", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setCs0Etag0",CharSequence.class, "Request header: Etag", 1, true),
  cs0_Etag_0_length("cs(Etag)-length", null, "request_header", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setCs0Etag0Length", Integer.class, "Length of HTTP request header: Etag", 1, true),
  cs0_Etag_0_count("cs(Etag)-count", null, "request_header", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setCs0Etag0Count", Integer.class, "Number of HTTP request header: Etag", 1, true),
  cs0_Expect_0("cs(Expect)", null, "request_header", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setCs0Expect0",CharSequence.class, "Request header: Expect", 1, true),
  cs0_Expect_0_length("cs(Expect)-length", null, "request_header", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setCs0Expect0Length", Integer.class, "Length of HTTP request header: Expect", 1, true),
  cs0_Expect_0_count("cs(Expect)-count", null, "request_header", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setCs0Expect0Count", Integer.class, "Number of HTTP request header: Expect", 1, true),
  cs0_Expires_0("cs(Expires)", null, "request_header", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setCs0Expires0",CharSequence.class, "Request header: Expires", 1, true),
  cs0_Expires_0_length("cs(Expires)-length", null, "request_header", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setCs0Expires0Length", Integer.class, "Length of HTTP request header: Expires", 1, true),
  cs0_Expires_0_count("cs(Expires)-count", null, "request_header", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setCs0Expires0Count", Integer.class, "Number of HTTP request header: Expires", 1, true),
  cs0_From_0("cs(From)", null, "request_header", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setCs0From0",CharSequence.class, "Request header: From", 1, true),
  cs0_From_0_length("cs(From)-length", null, "request_header", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setCs0From0Length", Integer.class, "Length of HTTP request header: From", 1, true),
  cs0_From_0_count("cs(From)-count", null, "request_header", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setCs0From0Count", Integer.class, "Number of HTTP request header: From", 1, true),
  cs0_Front_End_HTTPS_0("cs(Front-End-HTTPS)", null, "request_header", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setCs0FrontEndHTTPS0",CharSequence.class, "Request header: Front-End-HTTPS", 1, true),
  cs0_Front_End_HTTPS_0_length("cs(Front-End-HTTPS)-length", null, "request_header", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setCs0FrontEndHTTPS0Length", Integer.class, "Length of HTTP request header: Front-End-HTTPS", 1, true),
  cs0_Front_End_HTTPS_0_count("cs(Front-End-HTTPS)-count", null, "request_header", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setCs0FrontEndHTTPS0Count", Integer.class, "Number of HTTP request header: Front-End-HTTPS", 1, true),
  cs0_Host_0("cs(Host)", null, "request_header", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setCs0Host0",CharSequence.class, "Request header: Host", 1, true),
  cs0_Host_0_length("cs(Host)-length", null, "request_header", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setCs0Host0Length", Integer.class, "Length of HTTP request header: Host", 1, true),
  cs0_Host_0_count("cs(Host)-count", null, "request_header", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setCs0Host0Count", Integer.class, "Number of HTTP request header: Host", 1, true),
  cs0_If_Match_0("cs(If-Match)", null, "request_header", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setCs0IfMatch0",CharSequence.class, "Request header: If-Match", 1, true),
  cs0_If_Match_0_length("cs(If-Match)-length", null, "request_header", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setCs0IfMatch0Length", Integer.class, "Length of HTTP request header: If-Match", 1, true),
  cs0_If_Match_0_count("cs(If-Match)-count", null, "request_header", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setCs0IfMatch0Count", Integer.class, "Number of HTTP request header: If-Match", 1, true),
  cs0_If_Modified_Since_0("cs(If-Modified-Since)", null, "request_header", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setCs0IfModifiedSince0",CharSequence.class, "Request header: If-Modified-Since", 1, true),
  cs0_If_Modified_Since_0_length("cs(If-Modified-Since)-length", null, "request_header", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setCs0IfModifiedSince0Length", Integer.class, "Length of HTTP request header: If-Modified-Since", 1, true),
  cs0_If_Modified_Since_0_count("cs(If-Modified-Since)-count", null, "request_header", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setCs0IfModifiedSince0Count", Integer.class, "Number of HTTP request header: If-Modified-Since", 1, true),
  cs0_If_None_Match_0("cs(If-None-Match)", null, "request_header", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setCs0IfNoneMatch0",CharSequence.class, "Request header: If-None-Match", 1, true),
  cs0_If_None_Match_0_length("cs(If-None-Match)-length", null, "request_header", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setCs0IfNoneMatch0Length", Integer.class, "Length of HTTP request header: If-None-Match", 1, true),
  cs0_If_None_Match_0_count("cs(If-None-Match)-count", null, "request_header", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setCs0IfNoneMatch0Count", Integer.class, "Number of HTTP request header: If-None-Match", 1, true),
  cs0_If_Range_0("cs(If-Range)", null, "request_header", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setCs0IfRange0",CharSequence.class, "Request header: If-Range", 1, true),
  cs0_If_Range_0_length("cs(If-Range)-length", null, "request_header", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setCs0IfRange0Length", Integer.class, "Length of HTTP request header: If-Range", 1, true),
  cs0_If_Range_0_count("cs(If-Range)-count", null, "request_header", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setCs0IfRange0Count", Integer.class, "Number of HTTP request header: If-Range", 1, true),
  cs0_If_Unmodified_Since_0("cs(If-Unmodified-Since)", null, "request_header", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setCs0IfUnmodifiedSince0",CharSequence.class, "Request header: If-Unmodified-Since", 1, true),
  cs0_If_Unmodified_Since_0_length("cs(If-Unmodified-Since)-length", null, "request_header", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setCs0IfUnmodifiedSince0Length", Integer.class, "Length of HTTP request header: If-Unmodified-Since", 1, true),
  cs0_If_Unmodified_Since_0_count("cs(If-Unmodified-Since)-count", null, "request_header", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setCs0IfUnmodifiedSince0Count", Integer.class, "Number of HTTP request header: If-Unmodified-Since", 1, true),
  cs0_Last_Modified_0("cs(Last-Modified)", null, "request_header", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setCs0LastModified0",CharSequence.class, "Request header: Last-Modified", 1, true),
  cs0_Last_Modified_0_length("cs(Last-Modified)-length", null, "request_header", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setCs0LastModified0Length", Integer.class, "Length of HTTP request header: Last-Modified", 1, true),
  cs0_Last_Modified_0_count("cs(Last-Modified)-count", null, "request_header", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setCs0LastModified0Count", Integer.class, "Number of HTTP request header: Last-Modified", 1, true),
  cs0_Location_0("cs(Location)", null, "request_header", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setCs0Location0",CharSequence.class, "Request header: Location", 1, true),
  cs0_Location_0_length("cs(Location)-length", null, "request_header", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setCs0Location0Length", Integer.class, "Length of HTTP request header: Location", 1, true),
  cs0_Location_0_count("cs(Location)-count", null, "request_header", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setCs0Location0Count", Integer.class, "Number of HTTP request header: Location", 1, true),
  cs0_Max_Forwards_0("cs(Max-Forwards)", null, "request_header", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setCs0MaxForwards0",CharSequence.class, "Request header: Max-Forwards", 1, true),
  cs0_Max_Forwards_0_length("cs(Max-Forwards)-length", null, "request_header", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setCs0MaxForwards0Length", Integer.class, "Length of HTTP request header: Max-Forwards", 1, true),
  cs0_Max_Forwards_0_count("cs(Max-Forwards)-count", null, "request_header", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setCs0MaxForwards0Count", Integer.class, "Number of HTTP request header: Max-Forwards", 1, true),
  cs0_Meter_0("cs(Meter)", null, "request_header", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setCs0Meter0",CharSequence.class, "Request header: Meter", 1, true),
  cs0_Meter_0_length("cs(Meter)-length", null, "request_header", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setCs0Meter0Length", Integer.class, "Length of HTTP request header: Meter", 1, true),
  cs0_Meter_0_count("cs(Meter)-count", null, "request_header", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setCs0Meter0Count", Integer.class, "Number of HTTP request header: Meter", 1, true),
  cs0_P3P_0("cs(P3P)", null, "request_header", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setCs0P3P0",CharSequence.class, "Request header: P3P", 1, true),
  cs0_P3P_0_length("cs(P3P)-length", null, "request_header", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setCs0P3P0Length", Integer.class, "Length of HTTP request header: P3P", 1, true),
  cs0_P3P_0_count("cs(P3P)-count", null, "request_header", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setCs0P3P0Count", Integer.class, "Number of HTTP request header: P3P", 1, true),
  cs0_Pragma_0("cs(Pragma)", null, "request_header", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setCs0Pragma0",CharSequence.class, "Request header: Pragma", 1, true),
  cs0_Pragma_0_length("cs(Pragma)-length", null, "request_header", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setCs0Pragma0Length", Integer.class, "Length of HTTP request header: Pragma", 1, true),
  cs0_Pragma_0_count("cs(Pragma)-count", null, "request_header", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setCs0Pragma0Count", Integer.class, "Number of HTTP request header: Pragma", 1, true),
  cs0_Proxy_Authenticate_0("cs(Proxy-Authenticate)", null, "request_header", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setCs0ProxyAuthenticate0",CharSequence.class, "Request header: Proxy-Authenticate", 1, true),
  cs0_Proxy_Authenticate_0_length("cs(Proxy-Authenticate)-length", null, "request_header", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setCs0ProxyAuthenticate0Length", Integer.class, "Length of HTTP request header: Proxy-Authenticate", 1, true),
  cs0_Proxy_Authenticate_0_count("cs(Proxy-Authenticate)-count", null, "request_header", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setCs0ProxyAuthenticate0Count", Integer.class, "Number of HTTP request header: Proxy-Authenticate", 1, true),
  cs0_Proxy_Authorization_0("cs(Proxy-Authorization)", null, "request_header", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setCs0ProxyAuthorization0",CharSequence.class, "Request header: Proxy-Authorization", 1, true),
  cs0_Proxy_Authorization_0_length("cs(Proxy-Authorization)-length", null, "request_header", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setCs0ProxyAuthorization0Length", Integer.class, "Length of HTTP request header: Proxy-Authorization", 1, true),
  cs0_Proxy_Authorization_0_count("cs(Proxy-Authorization)-count", null, "request_header", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setCs0ProxyAuthorization0Count", Integer.class, "Number of HTTP request header: Proxy-Authorization", 1, true),
  cs0_Proxy_Connection_0("cs(Proxy-Connection)", null, "request_header", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setCs0ProxyConnection0",CharSequence.class, "Request header: Proxy-Connection", 1, true),
  cs0_Proxy_Connection_0_length("cs(Proxy-Connection)-length", null, "request_header", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setCs0ProxyConnection0Length", Integer.class, "Length of HTTP request header: Proxy-Connection", 1, true),
  cs0_Proxy_Connection_0_count("cs(Proxy-Connection)-count", null, "request_header", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setCs0ProxyConnection0Count", Integer.class, "Number of HTTP request header: Proxy-Connection", 1, true),
  cs0_Range_0("cs(Range)", null, "request_header", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setCs0Range0",CharSequence.class, "Request header: Range", 1, true),
  cs0_Range_0_length("cs(Range)-length", null, "request_header", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setCs0Range0Length", Integer.class, "Length of HTTP request header: Range", 1, true),
  cs0_Range_0_count("cs(Range)-count", null, "request_header", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setCs0Range0Count", Integer.class, "Number of HTTP request header: Range", 1, true),
  cs0_Referer_0("cs(Referer)", WebProxyMefField.requestReferer, "request_header", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setCs0Referer0",CharSequence.class, "Request header: Referer", 1, true),
  cs0_Referer_0_length("cs(Referer)-length", null, "request_header", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setCs0Referer0Length", Integer.class, "Length of HTTP request header: Referer", 1, true),
  cs0_Referer_0_count("cs(Referer)-count", null, "request_header", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setCs0Referer0Count", Integer.class, "Number of HTTP request header: Referer", 1, true),
  cs0_Refresh_0("cs(Refresh)", null, "request_header", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setCs0Refresh0",CharSequence.class, "Request header: Refresh", 1, true),
  cs0_Refresh_0_length("cs(Refresh)-length", null, "request_header", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setCs0Refresh0Length", Integer.class, "Length of HTTP request header: Refresh", 1, true),
  cs0_Refresh_0_count("cs(Refresh)-count", null, "request_header", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setCs0Refresh0Count", Integer.class, "Number of HTTP request header: Refresh", 1, true),
  cs0_Retry_After_0("cs(Retry-After)", null, "request_header", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setCs0RetryAfter0",CharSequence.class, "Request header: Retry-After", 1, true),
  cs0_Retry_After_0_length("cs(Retry-After)-length", null, "request_header", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setCs0RetryAfter0Length", Integer.class, "Length of HTTP request header: Retry-After", 1, true),
  cs0_Retry_After_0_count("cs(Retry-After)-count", null, "request_header", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setCs0RetryAfter0Count", Integer.class, "Number of HTTP request header: Retry-After", 1, true),
  cs0_Server_0("cs(Server)", null, "request_header", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setCs0Server0",CharSequence.class, "Request header: Server", 1, true),
  cs0_Server_0_length("cs(Server)-length", null, "request_header", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setCs0Server0Length", Integer.class, "Length of HTTP request header: Server", 1, true),
  cs0_Server_0_count("cs(Server)-count", null, "request_header", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setCs0Server0Count", Integer.class, "Number of HTTP request header: Server", 1, true),
  cs0_Set_Cookie_0("cs(Set-Cookie)", null, "request_header", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setCs0SetCookie0",CharSequence.class, "Request header: Set-Cookie", 1, true),
  cs0_Set_Cookie_0_length("cs(Set-Cookie)-length", null, "request_header", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setCs0SetCookie0Length", Integer.class, "Length of HTTP request header: Set-Cookie", 1, true),
  cs0_Set_Cookie_0_count("cs(Set-Cookie)-count", null, "request_header", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setCs0SetCookie0Count", Integer.class, "Number of HTTP request header: Set-Cookie", 1, true),
  cs0_Set_Cookie2_0("cs(Set-Cookie2)", null, "request_header", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setCs0SetCookie20",CharSequence.class, "Request header: Set-Cookie2", 1, true),
  cs0_Set_Cookie2_0_length("cs(Set-Cookie2)-length", null, "request_header", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setCs0SetCookie20Length", Integer.class, "Length of HTTP request header: Set-Cookie2", 1, true),
  cs0_Set_Cookie2_0_count("cs(Set-Cookie2)-count", null, "request_header", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setCs0SetCookie20Count", Integer.class, "Number of HTTP requestheader: Set-Cookie2", 1, true),
  cs0_TE_0("cs(TE)", null, "request_header", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setCs0TE0",CharSequence.class, "Request header: TE", 1, true),
  cs0_TE_0_length("cs(TE)-length", null, "request_header", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setCs0TE0Length", Integer.class, "Length of HTTP request header: TE", 1, true),
  cs0_TE_0_count("cs(TE)-count", null, "request_header", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setCs0TE0Count", Integer.class, "Number of HTTP request header: TE", 1, true),
  cs0_Trailer_0("cs(Trailer)", null, "request_header", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setCs0Trailer0",CharSequence.class, "Request header: Trailer", 1, true),
  cs0_Trailer_0_length("cs(Trailer)-length", null, "request_header", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setCs0Trailer0Length", Integer.class, "Length of HTTP request header: Trailer", 1, true),
  cs0_Trailer_0_count("cs(Trailer)-count", null, "request_header", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setCs0Trailer0Count", Integer.class, "Number of HTTP request header: Trailer", 1, true),
  cs0_Transfer_Encoding_0("cs(Transfer-Encoding)", null, "request_header", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setCs0TransferEncoding0",CharSequence.class, "Request header: Transfer-Encoding", 1, true),
  cs0_Transfer_Encoding_0_length("cs(Transfer-Encoding)-length", null, "request_header", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setCs0TransferEncoding0Length", Integer.class, "Length of HTTP request header: Transfer-Encoding", 1, true),
  cs0_Transfer_Encoding_0_count("cs(Transfer-Encoding)-count", null, "request_header", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setCs0TransferEncoding0Count", Integer.class, "Number of HTTP request header: Transfer-Encoding", 1, true),
  cs0_Upgrade_0("cs(Upgrade)", null, "request_header", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setCs0Upgrade0",CharSequence.class, "Request header: Upgrade", 1, true),
  cs0_Upgrade_0_length("cs(Upgrade)-length", null, "request_header", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setCs0Upgrade0Length", Integer.class, "Length of HTTP request header: Upgrade", 1, true),
  cs0_Upgrade_0_count("cs(Upgrade)-count", null, "request_header", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setCs0Upgrade0Count", Integer.class, "Number of HTTP request header: Upgrade", 1, true),
  cs0_User_Agent_0("cs(User-Agent)", WebProxyMefField.requestClientApplication, "request_header", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setCs0UserAgent0",CharSequence.class, "Request header: User-Agent", 1, true),
  cs0_User_Agent_0_length("cs(User-Agent)-length", null, "request_header", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setCs0UserAgent0Length", Integer.class, "Length of HTTP request header: User-Agent", 1, true),
  cs0_User_Agent_0_count("cs(User-Agent)-count", null, "request_header", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setCs0UserAgent0Count", Integer.class, "Number of HTTP request header: User-Agent", 1, true),
  cs0_Vary_0("cs(Vary)", null, "request_header", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setCs0Vary0",CharSequence.class, "Request header: Vary", 1, true),
  cs0_Vary_0_length("cs(Vary)-length", null, "request_header", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setCs0Vary0Length", Integer.class, "Length of HTTP request header: Vary", 1, true),
  cs0_Vary_0_count("cs(Vary)-count", null, "request_header", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setCs0Vary0Count", Integer.class, "Number of HTTP request header: Vary", 1, true),
  cs0_Via_0("cs(Via)", null, "request_header", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setCs0Via0",CharSequence.class, "Request header: Via", 1, true),
  cs0_Via_0_length("cs(Via)-length", null, "request_header", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setCs0Via0Length", Integer.class, "Length of HTTP request header: Via", 1, true),
  cs0_Via_0_count("cs(Via)-count", null, "request_header", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setCs0Via0Count", Integer.class, "Number of hTTP request header: Via", 1, true),
  cs0_WWW_Authenticate_0("cs(WWW-Authenticate)", null, "request_header", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setCs0WWWAuthenticate0",CharSequence.class, "Request header: WWW-Authenticate", 1, true),
  cs0_WWW_Authenticate_0_length("cs(WWW-Authenticate)-length", null, "request_header", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setCs0WWWAuthenticate0Length", Integer.class, "Length of HTTP request header: WWW-Authenticate", 1, true),
  cs0_WWW_Authenticate_0_count("cs(WWW-Authenticate)-count", null, "request_header", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setCs0WWWAuthenticate0Count", Integer.class, "Number of HTTP request header: WWW-Authenticate", 1, true),
  cs0_Warning_0("cs(Warning)", null, "request_header", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setCs0Warning0",CharSequence.class, "Request header: Warning", 1, true),
  cs0_Warning_0_length("cs(Warning)-length", null, "request_header", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setCs0Warning0Length", Integer.class, "Length of HTTP request header: Warning", 1, true),
  cs0_Warning_0_count("cs(Warning)-count", null, "request_header", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setCs0Warning0Count", Integer.class, "Number of HTTP request header: Warning", 1, true),
  cs0_X_BlueCoat_Error_0("cs(X-BlueCoat-Error)", null, "request_header", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setCs0XBlueCoatError0",CharSequence.class, "Request header: X-BlueCoat-Error", 1, true),
  cs0_X_BlueCoat_Error_0_length("cs(X-BlueCoat-Error)-length", null, "request_header", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setCs0XBlueCoatError0Length", Integer.class, "Length of HTTP request header: X-BlueCoat-Error", 1, true),
  cs0_X_BlueCoat_Error_0_count("cs(X-BlueCoat-Error)-count", null, "request_header", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setCs0XBlueCoatError0Count", Integer.class, "Number of HTTP request header: X-BlueCoat-Error", 1, true),
  cs0_X_BlueCoat_MC_Client_Ip_0("cs(X-BlueCoat-MC-Client-Ip)", null, "request_header", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setCs0XBlueCoatMCClientIp0",CharSequence.class, "Request header: X-BlueCoat-MC-Client-Ip", 1, true),
  cs0_X_BlueCoat_MC_Client_Ip_0_length("cs(X-BlueCoat-MC-Client-Ip)-length", null, "request_header", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setCs0XBlueCoatMCClientIp0Length", Integer.class, "Length of HTTP request header: X-BlueCoat-MC-Client-Ip", 1, true),
  cs0_X_BlueCoat_MC_Client_Ip_0_count("cs(X-BlueCoat-MC-Client-Ip)-count", null, "request_header", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setCs0XBlueCoatMCClientIp0Count", Integer.class, "Number of HTTP request header: X-BlueCoat-MC-Client-Ip", 1, true),
  cs0_X_BlueCoat_Via_0("cs(X-BlueCoat-Via)", null, "request_header", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setCs0XBlueCoatVia0",CharSequence.class, "Request header: X-BlueCoat-Via", 1, true),
  cs0_X_BlueCoat_Via_0_length("cs(X-BlueCoat-Via)-length", null, "request_header", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setCs0XBlueCoatVia0Length", Integer.class, "Length of HTTP request header: X-BlueCoat-Via", 1, true),
  cs0_X_BlueCoat_Via_0_count("cs(X-BlueCoat-Via)-count", null, "request_header", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setCs0XBlueCoatVia0Count", Integer.class, "Number of HTTP request header: X-BlueCoat-Via", 1, true),
  cs0_X_Forwarded_For_0("cs(X-Forwarded-For)", null, "request_header", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setCs0XForwardedFor0",CharSequence.class, "Request header: X-Forwarded-For", 1, true),
  cs0_X_Forwarded_For_0_length("cs(X-Forwarded-For)-length", null, "request_header", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setCs0XForwardedFor0Length", Integer.class, "Length of HTTP request header: X-Forwarded-For", 1, true),
  cs0_X_Forwarded_For_0_count("cs(X-Forwarded-For)-count", null, "request_header", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setCs0XForwardedFor0Count", Integer.class, "Number of HTTP request header: X-Forwarded-For", 1, true),
  rs0_Accept_0("rs(Accept)", null, "response_header", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setRs0Accept0",CharSequence.class, "Response header: Accept", 1, true),
  rs0_Accept_Charset_0("rs(Accept-Charset)", null, "response_header", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setRs0AcceptCharset0",CharSequence.class, "Response header: Accept-Charset", 1, true),
  rs0_Accept_Encoding_0("rs(Accept-Encoding)", null, "response_header", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setRs0AcceptEncoding0",CharSequence.class, "Response header: Accept-Encoding", 1, true),
  rs0_Accept_Language_0("rs(Accept-Language)", null, "response_header", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setRs0AcceptLanguage0",CharSequence.class, "Response header: Accept-Language", 1, true),
  rs0_Accept_Ranges_0("rs(Accept-Ranges)", null, "response_header", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setRs0AcceptRanges0",CharSequence.class, "Response header: Accept-Ranges", 1, true),
  rs0_Age_0("rs(Age)", null, "response_header", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setRs0Age0",CharSequence.class, "Response header: Age", 1, true),
  rs0_Allow_0("rs(Allow)", null, "response_header", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setRs0Allow0",CharSequence.class, "Response header: Allow", 1, true),
  rs0_Authentication_Info_0("rs(Authentication-Info)", null, "response_header", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setRs0AuthenticationInfo0",CharSequence.class, "Response header: Authentication-Info", 1, true),
  rs0_Authorization_0("rs(Authorization)", null, "response_header", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setRs0Authorization0",CharSequence.class, "Response header: Authorization", 1, true),
  rs0_Cache_Control_0("rs(Cache-Control)", null, "response_header", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setRs0CacheControl0",CharSequence.class, "Response header: Cache-Control", 1, true),
  rs0_Client_IP_0("rs(Client-IP)", null, "response_header", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setRs0ClientIP0",CharSequence.class, "Response header: Client-IP", 1, true),
  rs0_Connection_0("rs(Connection)", null, "response_header", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setRs0Connection0",CharSequence.class, "Response header: Connection", 1, true),
  rs0_Content_Disposition_0("rs(Content-Disposition)", null, "response_header", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setRs0ContentDisposition0",CharSequence.class, "Response header: Content-Disposition", 1, true),
  rs0_Content_Encoding_0("rs(Content-Encoding)", null, "response_header", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setRs0ContentEncoding0",CharSequence.class, "Response header: Content-Encoding", 1, true),
  rs0_Content_Language_0("rs(Content-Language)", null, "response_header", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setRs0ContentLanguage0",CharSequence.class, "Response header: Content-Language", 1, true),
  rs0_Content_Length_0("rs(Content-Length)", null, "response_header", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setRs0ContentLength0",CharSequence.class, "Response header: Content-Length", 1, true),
  rs0_Content_Location_0("rs(Content-Location)", null, "response_header", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setRs0ContentLocation0",CharSequence.class, "Response header: Content-Location", 1, true),
  rs0_Content_MD5_0("rs(Content-MD5)", null, "response_header", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setRs0ContentMD50",CharSequence.class, "Response header: Content-MD5", 1, true),
  rs0_Content_Range_0("rs(Content-Range)", null, "response_header", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setRs0ContentRange0",CharSequence.class, "Response header: Content-Range", 1, true),
  rs0_Content_Type_0("rs(Content-Type)", WebProxyMefField.responseContentType, "response_header", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setRs0ContentType0",CharSequence.class, "Response header: Content-Type", 1, true),
  rs0_Cookie_0("rs(Cookie)", null, "response_header", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setRs0Cookie0",CharSequence.class, "Response header: Cookie", 1, true),
  rs0_Cookie2_0("rs(Cookie2)", null, "response_header", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setRs0Cookie20",CharSequence.class, "Response header: Cookie2", 1, true),
  rs0_Date_0("rs(Date)", null, "response_header", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setRs0Date0",CharSequence.class, "Response header: Date", 1, true),
  rs0_Etag_0("rs(Etag)", null, "response_header", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setRs0Etag0",CharSequence.class, "Response header: Etag", 1, true),
  rs0_Expect_0("rs(Expect)", null, "response_header", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setRs0Expect0",CharSequence.class, "Response header: Expect", 1, true),
  rs0_Expires_0("rs(Expires)", null, "response_header", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setRs0Expires0",CharSequence.class, "Response header: Expires", 1, true),
  rs0_From_0("rs(From)", null, "response_header", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setRs0From0",CharSequence.class, "Response header: From", 1, true),
  rs0_Front_End_HTTPS_0("rs(Front-End-HTTPS)", null, "response_header", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setRs0FrontEndHTTPS0",CharSequence.class, "Response header: Front-End-HTTPS", 1, true),
  rs0_Host_0("rs(Host)", null, "response_header", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setRs0Host0",CharSequence.class, "Response header: Host", 1, true),
  rs0_If_Match_0("rs(If-Match)", null, "response_header", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setRs0IfMatch0",CharSequence.class, "Response header: If-Match", 1, true),
  rs0_If_Modified_Since_0("rs(If-Modified-Since)", null, "response_header", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setRs0IfModifiedSince0",CharSequence.class, "Response header: If-Modified-Since", 1, true),
  rs0_If_None_Match_0("rs(If-None-Match)", null, "response_header", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setRs0IfNoneMatch0",CharSequence.class, "Response header: If-None-Match", 1, true),
  rs0_If_Range_0("rs(If-Range)", null, "response_header", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setRs0IfRange0",CharSequence.class, "Response header: If-Range", 1, true),
  rs0_If_Unmodified_Since_0("rs(If-Unmodified-Since)", null, "response_header", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setRs0IfUnmodifiedSince0",CharSequence.class, "Response header: If-Unmodified-Since", 1, true),
  rs0_Last_Modified_0("rs(Last-Modified)", null, "response_header", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setRs0LastModified0",CharSequence.class, "Response header: Last-Modified", 1, true),
  rs0_Location_0("rs(Location)", null, "response_header", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setRs0Location0",CharSequence.class, "Response header: Location", 1, true),
  rs0_Max_Forwards_0("rs(Max-Forwards)", null, "response_header", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setRs0MaxForwards0",CharSequence.class, "Response header: Max-Forwards", 1, true),
  rs0_Meter_0("rs(Meter)", null, "response_header", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setRs0Meter0",CharSequence.class, "Response header: Meter", 1, true),
  rs0_P3P_0("rs(P3P)", null, "response_header", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setRs0P3P0",CharSequence.class, "Response header: P3P", 1, true),
  rs0_Pragma_0("rs(Pragma)", null, "response_header", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setRs0Pragma0",CharSequence.class, "Response header: Pragma", 1, true),
  rs0_Proxy_Authenticate_0("rs(Proxy-Authenticate)", null, "response_header", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setRs0ProxyAuthenticate0",CharSequence.class, "Response header: Proxy-Authenticate", 1, true),
  rs0_Proxy_Authorization_0("rs(Proxy-Authorization)", null, "response_header", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setRs0ProxyAuthorization0",CharSequence.class, "Response header: Proxy-Authorization", 1, true),
  rs0_Proxy_Connection_0("rs(Proxy-Connection)", null, "response_header", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setRs0ProxyConnection0",CharSequence.class, "Response header: Proxy-Connection", 1, true),
  rs0_Range_0("rs(Range)", null, "response_header", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setRs0Range0",CharSequence.class, "Response header: Range", 1, true),
  rs0_Referer_0("rs(Referer)", null, "response_header", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setRs0Referer0",CharSequence.class, "Response header: Referer", 1, true),
  rs0_Refresh_0("rs(Refresh)", null, "response_header", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setRs0Refresh0",CharSequence.class, "Response header: Refresh", 1, true),
  rs0_Retry_After_0("rs(Retry-After)", null, "response_header", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setRs0RetryAfter0",CharSequence.class, "Response header: Retry-After", 1, true),
  rs0_Server_0("rs(Server)", null, "response_header", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setRs0Server0",CharSequence.class, "Response header: Server", 1, true),
  rs0_Set_Cookie_0("rs(Set-Cookie)", null, "response_header", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setRs0SetCookie0",CharSequence.class, "Response header: Set-Cookie", 1, true),
  rs0_Set_Cookie2_0("rs(Set-Cookie2)", null, "response_header", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setRs0SetCookie20",CharSequence.class, "Response header: Set-Cookie2", 1, true),
  rs0_TE_0("rs(TE)", null, "response_header", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setRs0TE0",CharSequence.class, "Response header: TE", 1, true),
  rs0_Trailer_0("rs(Trailer)", null, "response_header", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setRs0Trailer0",CharSequence.class, "Response header: Trailer", 1, true),
  rs0_Transfer_Encoding_0("rs(Transfer-Encoding)", null, "response_header", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setRs0TransferEncoding0",CharSequence.class, "Response header: Transfer-Encoding", 1, true),
  rs0_Upgrade_0("rs(Upgrade)", null, "response_header", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setRs0Upgrade0",CharSequence.class, "Response header: Upgrade", 1, true),
  rs0_User_Agent_0("rs(User-Agent)", null, "response_header", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setRs0UserAgent0",CharSequence.class, "Response header: User-Agent", 1, true),
  rs0_Vary_0("rs(Vary)", null, "response_header", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setRs0Vary0",CharSequence.class, "Response header: Vary", 1, true),
  rs0_Via_0("rs(Via)", null, "response_header", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setRs0Via0",CharSequence.class, "Response header: Via", 1, true),
  rs0_WWW_Authenticate_0("rs(WWW-Authenticate)", null, "response_header", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setRs0WWWAuthenticate0",CharSequence.class, "Response header: WWW-Authenticate", 1, true),
  rs0_Warning_0("rs(Warning)", null, "response_header", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setRs0Warning0",CharSequence.class, "Response header: Warning", 1, true),
  rs0_X_BlueCoat_Error_0("rs(X-BlueCoat-Error)", null, "response_header", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setRs0XBlueCoatError0",CharSequence.class, "Response header: X-BlueCoat-Error", 1, true),
  rs0_X_BlueCoat_MC_Client_Ip_0("rs(X-BlueCoat-MC-Client-Ip)", null, "response_header", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setRs0XBlueCoatMCClientIp0",CharSequence.class, "Response header: X-BlueCoat-MC-Client-Ip", 1, true),
  rs0_X_BlueCoat_Via_0("rs(X-BlueCoat-Via)", null, "response_header", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setRs0XBlueCoatVia0",CharSequence.class, "Response header: X-BlueCoat-Via", 1, true),
  rs0_X_Forwarded_For_0("rs(X-Forwarded-For)", null, "response_header", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setRs0XForwardedFor0",CharSequence.class, "Response header: X-Forwarded-For", 1, true),
  rs_service_time_taken("rs-service-time-taken", null, "transaction_timing", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setRsServiceTimeTaken", Integer.class, "Total time taken to receive the first response byte from the origin server. This is measured as the time between when the first data is received from the OCS and the proxy responds.", 1, true),
  rs_download_time_taken("rs-download-time-taken", null, "transaction_timing", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setRsDownloadTimeTaken", Integer.class, "Total time taken to receive the complete response from the origin server. This is measured as the time from receiving the first response byte from the origin server to the time the last byte is received.", 1, true),
  sc_time_taken("sc-time-taken", null, "transaction_timing", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setScTimeTaken", Integer.class, "Total time taken to return the response to the client. Measured as the difference between the last byte received from the client by the Proxy byte response and the first byte of the response to that request from the proxy to the client.", 1, true),
  x_bluecoat_nc_evaluation_time("x-bluecoat-nc-evaluation-time", null, "transaction_timing", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setXBluecoatNcEvaluationTime", Integer.class, "Time spent evaluating policy for a new connection, as requested by the client.", 1, true),
  x_bluecoat_ci_evaluation_time("x-bluecoat-ci-evaluation-time", null, "transaction_timing", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setXBluecoatCiEvaluationTime", Integer.class, "Time spent evaluating policy as the client begins to transmit data.", 1, true),
  x_bluecoat_si_evaluation_time("x-bluecoat-si-evaluation-time", null, "transaction_timing", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setXBluecoatSiEvaluationTime", Integer.class, "Time spent evaluating policy for responses from the OCS.", 1, true),
  cs_request_time("cs-request-time", null, "transaction_timing", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setCsRequestTime", Integer.class, "Time to receive the request from the client, as measured from initial connection from the client until data is received from the client.", 1, true),
  x_bluecoat_icap_respmod_delay_time("x-bluecoat-icap-respmod-delay-time", null, "transaction_timing", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setXBluecoatIcapRespmodDelayTime", Integer.class, "Time taken to connect to ICAP respmod service. This is measured as the difference between when the Proxy connects to the ICAP server and the ICAP server responds.", 1, true),
  x_bluecoat_icap_respmod_service_time("x-bluecoat-icap-respmod-service-time", null, "transaction_timing", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setXBluecoatIcapRespmodServiceTime", Integer.class, "Time spent waiting for the ICAP response scanner to service the request.", 1, true),
  cs_categorization_time("cs-categorization-time", null, "transaction_timing", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setCsCategorizationTime", Integer.class, "Total time taken to categorize the request URL.", 1, true),
  cs_categorization_time_static("cs-categorization-time-static", null, "transaction_timing", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setCsCategorizationTimeStatic", Integer.class, "Time taken to statically categorize the request URL from the local Webfilter category cache.", 1, true),
  x_bluecoat_ch_evaluation_time("x-bluecoat-ch-evaluation-time", null, "transaction_timing", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setXBluecoatChEvaluationTime", Integer.class, "Time spent evaluating policy at the Cache Hit checkpoint.", 1, true),
  x_bluecoat_so_evaluation_time("x-bluecoat-so-evaluation-time", null, "transaction_timing", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setXBluecoatSoEvaluationTime", Integer.class, "Time taken to evaluate policy at the point where the proxy sends data to the OCS.", 1, true),
  x_bluecoat_request_latency("x-bluecoat-request-latency", null, "transaction_timing", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setXBluecoatRequestLatency", Integer.class, "Time from when the proxy receives the request from the client until the appliance establishes the server connection.", 1, true),
  x_bluecoat_total_time_added("x-bluecoat-total-time-added", null, "transaction_timing", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setXBluecoatTotalTimeAdded", Integer.class, "Total of x-bluecoat-requestlatency plus x-bluecoatresponse-last-byte-latency.", 1, true),
  x_bluecoat_response_first_byte_latency("x-bluecoat-response-first-byte-latency", null, "transaction_timing", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setXBluecoatResponseFirstByteLatency", Integer.class, "Time from the first response byte received from the OCS to the first response byte is sent to client.", 1, true),
  x_bluecoat_response_last_byte_latency("x-bluecoat-response-last-byte-latency", null, "transaction_timing", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setXBluecoatResponseLastByteLatency", Integer.class, "Time from receiving the last response byte from the OCS to first byte is sent to the client.", 1, true),
  x_bluecoat_total_policy_evaluation_time("x-bluecoat-total-policy-evaluation-time", null, "transaction_timing", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setXBluecoatTotalPolicyEvaluationTime", Integer.class, "Total time spent evaluating policy for this transaction. Does not include Access Logging time, which does not impact the user transaction.", 1, true),
  x_bluecoat_co_evaluation_time("x-bluecoat-co-evaluation-time", null, "transaction_timing", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setXBluecoatCoEvaluationTime", Integer.class, "Time spent by the appliance evaluating the ICAP response before serving data to the user.", 1, true),
  x_bluecoat_cot_evaluation_time("x-bluecoat-cot-evaluation-time", null, "transaction_timing", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setXBluecoatCotEvaluationTime", Integer.class, "Time spent evaluating the ICAP response before serving an exception page to the user.", 1, true),
  logCollectionId("logCollectionId", null, "LogCollection", Arrays.<MefFieldConstrait>asList(new MefIntegerConstraint()),
          "setLogCollectionId", Integer.class, "Log collection record id", 1, false),
  logCollectionHost("logCollectionHost", null, "LogCollection", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setLogCollectionHost", CharSequence.class, "Log collection host", 1, false),
  logCollectionCategory("logCollectionCategory", null, "LogCollection", Arrays.<MefFieldConstrait>asList(new MefStringConstraint()),
          "setLogCollectionCategory", CharSequence.class, "Log collection category", 1, false),
  logCollectionTime("logCollectionTime", null, "LogCollection", Arrays.<MefFieldConstrait>asList(new MefMilliSecTimeStampConstraint()),
          "setLogCollectionTime", Long.class, "Log collection host", 1, false),
;

  private static final Map<String, WebProxyMefField> mappings = new HashMap<String, WebProxyMefField>();
  private static final Map<String, SupportedFormat> supportedFormatMappings = new HashMap<String, SupportedFormat>();
  private static final String NAMESPACE = "BlueCoat";

  private final List<MefFieldConstrait> contraints;
  private final WebProxyMefField mefField;
  private final String namespace;
  private final String fieldName;
  private final String description;
  private final int numberOfValue;
  private final boolean isNullable;
  private final String setter;
  private final Class argClass;
  private final String avroName;
  private String avroObjectClass = null;
  private Map<String, String> stack=null;
  private final Map<String, SupportedFormat> supportedFormatfields = new HashMap<String, SupportedFormat>();

  private BluecoatMainToMefMappings(String fieldName,
          WebProxyMefField mefField,
          String namespace,
          List<MefFieldConstrait> constraints,
          String setter,
          Class argClass,
          String description,
          int numberOfValue,
          boolean isNullable) {
    this.mefField = mefField;
    this.fieldName = fieldName;
    this.namespace = namespace;
    this.contraints = constraints;
    this.description = description;
    this.numberOfValue = numberOfValue;
    this.isNullable = isNullable;
    this.avroName = this.name();
    this.setter = setter;
    this.argClass = argClass;

  }

  public WebProxyMefField getMefField() {
    return mefField;
  }

  public String getPrettyName() {
    return this.fieldName;
  }

  public List<MefFieldConstrait> getContraints() {
    return contraints;
  }

  /**
   * Init external format to MEF mapping, only keeps fields for which a mapping
   * to MEF is defined.
   */
  private void initialize() {
    for (BluecoatMainToMefMappings field : values()) {
      if (null != field.mefField) {
        mappings.put(field.getPrettyName(), field.mefField);
      }
    }
  }

  /**
   * returns the external fields to MEF fields mapping
   *
   * @return the list external format fields having a corrsponding Mef field
   */
  public Set<String> getExternalFieldNames() {
    if (mappings.isEmpty()) {
      initialize();
    }
    return mappings.keySet();
  }

  /**
   * returns the Mef fields corresponding to external format field
   *
   * @param externalFieldName external format field name
   * @return MefField corresponding to the field name
   */
  public WebProxyMefField getMefField(String externalFieldName) {
    return mappings.get(externalFieldName);
  }

  public String getDescription() {
    return this.description;
  }

  public int getNumberOfValues() {
    return this.numberOfValue;
  }

  public boolean isNullable() {
    return isNullable;
  }

  public String getSetter() {
    return this.setter;
  }

  public Class getArgClass() {
    return this.argClass;
  }

  public Collection<SupportedFormat> getSupportedFormatfields() {
    if (this.supportedFormatfields.isEmpty()) {
      initSupportedFormatFields();
    }
    return this.supportedFormatfields.values();
  }

  private void initSupportedFormatFields() {
    for (BluecoatMainToMefMappings field : values()) {
      if (null != field.getPrettyName()) {
        this.supportedFormatfields.put(field.getPrettyName(), field);
      }
    }
  }
  public String getAvroName() {
    return this.avroName;
  }

  public String getNamespace() {
    return this.namespace;
  }

  public String getAvroObjectClass(SupportedFormats prefix) {
    if (null == this.avroObjectClass){
      this.avroObjectClass = SupportedFormatIntrospectionUtils.genAvroObjectClass(namespace, prefix.name());
    }
    return this.avroObjectClass;
  }

  
  public Map<String, String> getStack(String prefix){
    if (null == this.stack){
      this.stack= SupportedFormatIntrospectionUtils.getStack( prefix, namespace);
    }
    return stack;
  }

    /**
   * Init external format to MEF mapping, only keeps fields for which a mapping
   * to MEF is defined.
   */
  private void initializeSupportedFormatMapping() {
    for (BluecoatMainToMefMappings field : values()) {
      supportedFormatMappings.put(field.getPrettyName(), field);
    }
  }

  public SupportedFormat getByPrettyName(String prettyName) {
    if (supportedFormatMappings.isEmpty()) {
      initializeSupportedFormatMapping();
    }
    return this.supportedFormatMappings.get(prettyName);
  }



}
