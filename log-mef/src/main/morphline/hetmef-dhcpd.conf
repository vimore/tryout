include classpath("logparsingjob.conf")

dhcpd.patterns: [
  {
    dictionaryString : """

                    DHCPACTION DHCPACK
                  """
    #DHCPACK on 10.203.113.134 to 20:a3:df:2c:6b:98 (WW6321DE2A5B78) via eth0
    expr : """%{DHCPACTION:cefSignatureId}\s"""
    children : [
      {
        dictionaryString : """

                        DHCPACTION DHCPACK
                        IPADDRESS \S+
                        MACADDRESS \S+
                        HOSTNAME [^\)]+
                        DOMAIN \S+
                        INTERFACE \S+
                      """
        #DHCPACK on 10.203.113.134 to 20:a3:df:2c:6b:98 (WW6321DE2A5B78) via eth0
        expr : """on\s%{IPADDRESS:destinationAddress}\sto\s%{MACADDRESS:destinationMacAddress}(?:\s\(%{HOSTNAME:destinationNameOrIp}\))?\svia\s%{INTERFACE:deviceInterface}"""
        children : []
      },
      {
        dictionaryString : """

                        DHCPACTION DHCPACK
                        IPADDRESS \S+
                        MACADDRESS \S+
                        HOSTNAME [^\)]+
                        DOMAIN \S+
                        INTERFACE \S+
                      """
        #DHCPACK to 10.147.185.125 (c8:1f:66:b4:95:15) via eth0
        expr : """to\s%{IPADDRESS:destinationAddress}\s\(%{MACADDRESS:destinationMacAddress}\)\svia\s%{INTERFACE:deviceInterface}"""
        children : []
      }
    ]
  },
  {
    dictionaryString : """
                    DHCPACTION DHCPREQUEST
                  """
    #DHCPREQUEST for 10.141.38.153 from 00:90:fb:16:91:ec via eth0:1
    expr : """%{DHCPACTION:cefSignatureId}\s"""
    children : [
      {
        dictionaryString : """
                        IPADDRESS \S+
                        MACADDRESS \S+
                        HOSTNAME \S+
                        INTERFACE \S+
                      """
        #DHCPREQUEST for 10.141.38.153 from 00:90:fb:16:91:ec via eth0:1
        expr : """for\s%{IPADDRESS:sourceAddress}\sfrom\s%{MACADDRESS:sourceMacAddress}(?:\s\(%{HOSTNAME:sourceHostName}\))?\svia\s%{INTERFACE:deviceInterface}"""
        children : []
      } ,
      {
        dictionaryString : """
                        IPADDRESS \S+
                        MACADDRESS \S+
                        HOSTNAME [^\)]+
                        INTERFACE \S+
                      """
        #DHCPREQUEST for 10.214.113.80 (10.214.112.41) from c8:1f:66:b6:6e:76 via eth0
        expr : """for\s%{IPADDRESS:sourceAddress}\s\([^\)]+\)\sfrom\s%{MACADDRESS:sourceMacAddress}(?:\s\(%{HOSTNAME:sourceNameOrIp}\))?\svia\s%{INTERFACE:deviceInterface}"""
        children : []
      }
    ]
  },
  {
    dictionaryString : """
                    DHCPACTION DHCPRELEASE
                    IPADDRESS \S+
                    MACADDRESS \S+
                    HOSTNAME \S+
                    INTERFACE \S+
                  """
    #DHCPRELEASE of 10.214.118.97 from 20:3a:07:23:8c:3a (SEP203A07238C3A) via eth0:2 (found)
    #DHCPRELEASE of 10.214.118.97 from 20:3a:07:23:8c:3a via eth0 (found)
    expr : """%{DHCPACTION:cefSignatureId}\sof\s%{IPADDRESS:destinationAddress}\sfrom\s%{MACADDRESS:destinationMacAddress}(?:\s\(%{HOSTNAME:destinationNameOrIp}\))?\svia\s%{INTERFACE:deviceInterface}\s\(found\)"""
    children : []
  } ,

  {
    dictionaryString : """
                    DHCPACTION DHCPNAK
                    IPADDRESS \S+
                    MACADDRESS \S+
                    HOSTNAME \S+
                    INTERFACE \S+
                  """
    #DHCPNAK on 10.0.0.10 to 48:51:b7:b6:2b:f5 via 10.138.159.130
    expr : """%{DHCPACTION:cefSignatureId}\son\s%{IPADDRESS:destinationAddress}\sto\s%{MACADDRESS:destinationMacAddress}\svia\s%{INTERFACE:deviceInterface}"""
    children : []
  },
  {
    dictionaryString : """
                    DHCPACTION DHCPINFORM
                    IPADDRESS \S+
                    MACADDRESS \S+
                    HOSTNAME \S+
                    INTERFACE \S+
                    REASON .*
                  """
    #dhcpd: DHCPINFORM from 172.22.36.40 via 172.22.32.2
    expr : """%{DHCPACTION:cefSignatureId}\sfrom\s%{IPADDRESS:SourceAddress}\svia\s%{INTERFACE:deviceInterface}(?::\s%{REASON})?"""
    children : []
  } ,
  {
    dictionaryString : """
                    DHCPACTION DHCPDISCOVER
                    IPADDRESS \S+
                    MACADDRESS \S+
                    HOSTNAME [^\)]+
                    INTERFACE \S+
                    REASON .*
                  """
    #DHCPDISCOVER from 00:14:38:5c:c2:ed via 151.140.184.4
    expr : """%{DHCPACTION:cefSignatureId}\sfrom\s%{MACADDRESS:sourceMacAddress}(:?\s\(%{HOSTNAME:sourceNameOrIp}\))?\svia\s%{INTERFACE:deviceInterface}(?::\s%{REASON})?"""
    children : []
  },
  #dhcpd: DHCPDECLINE of 62.159.20.237 from 91:46:b4:c1:2d:22 (HELAD0926E5726) via 62.159.20.3: abandoned

  {
    dictionaryString : """
                    DHCPACTION DHCPDECLINE
                    IPADDRESS \S+
                    MACADDRESS \S+
                    HOSTNAME [^\)]+
                    INTERFACE \S+
                    REASON .*
                  """
    expr : """%{DHCPACTION:cefSignatureId}\sof\s%{IPADDRESS:destinationAddress}\sfrom\s%{MACADDRESS:destinationMacAddress}(?:\s\(%{HOSTNAME:destinationNameOrIp}\))?\svia\s%{INTERFACE:deviceInterface}"""
    children : []
  },
  {
    dictionaryString : """
                    DHCPACTION DHCPOFFER
                    IPADDRESS \S+
                    MACADDRESS \S+
                    HOSTNAME [^\)]+
                    INTERFACE \S+
                    REASON .*
                  """
    #DHCPOFFER on 151.140.185.228 to 00:14:38:5c:c2:ed (P9100-C10H08) via 151.140.184.4
    #DHCPOFFER on 10.227.151.213 to \"\" (btp091719) via 10.227.151.3
    expr : """%{DHCPACTION:cefSignatureId}\son\s%{IPADDRESS:destinationAddress}\sto\s(?:""|%{MACADDRESS:destinationMacAddress})(?:\s\(%{HOSTNAME:destinationNameOrIp}\))?\svia\s%{INTERFACE:deviceInterface}"""
    children : []
  },
  {
    dictionaryString : """
                    DHCPACTION DHCPEXPIRE
                    IPADDRESS \S+
                    MACADDRESS \S+
                    HOSTNAME [^\)]+
                    INTERFACE \S+
                    REASON .*
                  """
    # DHCPEXPIRE on 172.16.100.184 to a7:b2:ec:3e:50:df
    expr : """%{DHCPACTION:cefSignatureId}\son\s%{IPADDRESS:destinationAddress}\sto\s(?:""|%{MACADDRESS:destinationMacAddress})(?:\s\(%{HOSTNAME:destinationNameOrIp}\))?"""
    children : []
  },
  {
    dictionaryString : """
                    DHCPACTION uid lease
                    IPADDRESS \S+
                    MACADDRESS \S+
                    HOSTNAME [^\)]+
                    INTERFACE \S+
                    REASON duplicate
                  """
    #dhcpd: uid lease 172.22.46.204 for client b4:f0:ab:d2:8b:6b is duplicate on 172.22.32.0/19
    expr : """%{DHCPACTION:cefSignatureId}\s%{IPADDRESS:destinationAddress}\sfor\sclient\s%{MACADDRESS:destinationMacAddress}(?:\s\(%{HOSTNAME:destinationNameOrIp}\))?\sis\s%{REASON:eventOutcome}\son\s%{INTERFACE:deviceInterface}"""
    children : []
  },
  {
    dictionaryString : """
                    DHCPACTION Added new forward map
                    IPADDRESS \S+
                    MACADDRESS \S+
                    HOSTNAME [^\)]+
                    INTERFACE \S+
                    REASON duplicate
                  """
    # dhcpd: Added new forward map from axs8039imac-wireless.ssc.example.com to 172.22.35.79
    expr : """%{DHCPACTION:cefSignatureId}\sfrom\s%{HOSTNAME:destinationNameOrIp}\sto\s%{IPADDRESS:destinationAddress}"""
    children : []
  }
]

morphlines : [
  {
    # Name used to identify a morphline. E.g. used if there are multiple
    # morphlines in a morphline config file
    id : dhcpd

    # Import all morphline commands in these java packages and their subpackages.
    # Other commands that may be present on the classpath are not visible to this
    # morphline.
    importCommands : [ "org.kitesdk.morphline.**", "com.securityx.model.mef.morphline.**"]

    commands : [

      {
        ruleset {
          name : "Dhcpd",
          field : "dhcpdInput",
          sampleUnmatchedTo : "./target/windows-unmatched.log",
          nodes : [
            { 
              dictionaryString : """
                DATE \w+\s+\d+\s+\d+:\d+:\d+
                HOST \S+
                DHCPD \S*"""${dhcpd.processname.pattern}"""
                PROCESSPID \d+
              """
              # <30>May  8 17:26:27 dnsmasq-dhcp[304]: DHCPREQUEST(br0) 192.168.10.208 b8:e8:56:03:c9:7e
              expr : """%{DHCPD:deviceProcessName}\[%{PROCESSPID:deviceProcessId}\]:\s"""
              children : [


                {
                  dictionaryString : """

                    DHCPACTION DHCP_RenewLease
                    IPADDRESS \S+
                    MACADDRESS \S+
                    HOSTNAME \S+
                    DOMAIN \S+
                  """
                  #DHCP_RenewLease: Host=SEPF47F35A29A7A IP=10.1.248.75 MAC=f47f35a29a7a Domain=dhcp.amer.jpmchase.net ClientID=01f47f35a29a7a
                  expr : """%{DHCPACTION:cefSignatureId}:\sHost=%{HOSTNAME:destinationNameOrIp}\sIP=%{IPADDRESS:destinationAddress}\sMAC=%{MACADDRESS:destinationMacAddress}\sDomain=(?:%{DOMAIN:destinationDnsDomain})?\s.*"""
                  children : []
                },


               {
                dictionaryString : """

                    DHCPACTION DHCP_GrantLease
                    IPADDRESS \S+
                    MACADDRESS \S+
                    HOSTNAME \S+
                    DOMAIN \S+
                  """
                #DHCP_GrantLease: Host=android-99c8cb0ca3d29519 IP=10.10.30.233 MAC=faa5c7a52bb8 Domain= ClientID=01zzzzc7a52f18
                expr : """%{DHCPACTION:cefSignatureId}:\sHost=%{HOSTNAME:destinationNameOrIp}\sIP=%{IPADDRESS:destinationAddress}\sMAC=%{MACADDRESS:destinationMacAddress}\sDomain=(?:%{DOMAIN:destinationDnsDomain})?\s.*"""
                children : []
               },
                #for nereus ; we are receiving info or err  before the real dhcpd event
               {
                 dictionaryString : """
                     LEVEL  (?:err|info)
                  """
                 #
                 expr : """%{LEVEL}\s"""
                 children : []${dhcpd.patterns}[]

               }
#                {
#                  dictionaryString : """
#
#                    DHCPACTION No DHCP lease available to offer from subnet
#                    IPADDRESS \S+
#                  """
#                  #No DHCP lease available to offer from subnet 10.10.30.0.
#                  expr : """%{DHCPACTION:cefSignatureId}:\s%{IPADDRESS:sourceNameOrIp}\."""
#                  children : []
#                }
              ]${dhcpd.patterns}[]
            },
            #DHCPD FOR BOREAD
            {
              dictionaryString: """
                DHCPD """${dhcpd.processname.pattern}"""
                LEVEL \[[^\]]+\]
                DHCPKVP .*
              """
              # dhcpd: DHCPACK on 10.203.113.134 to 20:a3:df:2c:6b:98 (WW6321DE2A5B78) via eth0
              expr: """%{DHCPD:deviceProcessName}:\s%{LEVEL}\s%{DHCPKVP:dhcpKVPs}"""
              children: []
            },
            #DHCPD FOR HERMES
            {
              dictionaryString : """
                DHCPD """${dhcpd.processname.pattern}"""
              """
              # dhcpd: DHCPACK on 10.203.113.134 to 20:a3:df:2c:6b:98 (WW6321DE2A5B78) via eth0
              expr : """%{DHCPD:deviceProcessName}:\s"""
              children : []${dhcpd.patterns}[
                #
                #
                #                {
                #                  dictionaryString : """
                #
                #                    DHCPACTION No DHCP lease available to offer from subnet
                #                    IPADDRESS \S+
                #                  """
                #                  #No DHCP lease available to offer from subnet 10.10.30.0.
                #                  expr : """%{DHCPACTION:cefSignatureId}:\s%{IPADDRESS:sourceNameOrIp}\."""
                #                  children : []
                #                }
              ]
            }
          ]
        }

      },
      {
        addKeyValuesIfMissing {
          dhcpKVPs: ""
        }
      ,}
      {
        if {
          conditions: [
            {contains {_matchedRuleset: [Dhcpd]}}
          ]
          then: [
            {
              if {
                conditions: [ {not {contains { dhcpKVPs: [""] } } } ]
                then: [
                  {
                    kvpSpliter  {
                      inputFieldName : "dhcpKVPs"
                      fieldSep : " "
                      fieldValueSep : "="
                      quoteChar : "\""
                      trim : true,
                    }
                  },
                  {
                    addKeyValuesIfMissing {
                      logSourceType: "HETMef"
                      externalLogSourceType: "dhcpd"
                      deviceNameOrIp: "@{logCollectionHost}"
                      startTime = "@{receiptTime}"
                      cefSignatureId: "@{TYPE}"
                      destinationAddress: "@{IP}"
                      #destinationMacAddress: "@{MAC}"
                      destinationNameOrIp: "@{HOSTNAME}"
                      destinationDnsDomain: "@{DOMAIN}"
                      deviceNameOrIp: "@{DHCPSERVER}"

                    },
                  },
                  {
                    grokcmd {
                      # broken by relocation of morphline config to resource
                      #dictionaryFiles : [logcollection-grok-patterns]
                      dictionaryString : """
                      MAC [^:]{1,2}:[^:]{1,2}:[^:]{1,2}:[^:]{1,2}:[^:]{1,2}:[^:]{1,2}
                      """
                      #Oct 16 10:49:20 ciscopix %PIX-6-302015: B....
                      expressions : {
                        MAC : """(?:[^:]+:)?%{MAC:destinationMacAddress}"""
                      }
                      extract : true
                      findSubstrings : true
                      addEmptyStrings : false
                    }

                  },
                  {
                    translate {
                      field: cefSignatureId
                      dictionary: {
                        "GRANT": DHCPACK
                        "RENEW": DHCPACK
#                        "DHCPREQUEST": DHCPREQUEST
#                        "DHCPRELEASE": DHCPRELEASE
#                        "DHCPNAK": DHCPNACK
#                        "DHCPINFORM": DHCPINFORM
#                        "uid lease": DHCPISSUE
#                        "Added new forward map": DHCPDNSUP
                      }
                      fallback: Unknown # if no fallback is defined and no match is found then the command fails
                    }
                  }
                ]
                else: [
                  {
                    addKeyValuesIfMissing {
                      logSourceType: "HETMef"
                      externalLogSourceType: "dhcpd"
                      deviceNameOrIp: "@{logCollectionHost}"
                      startTime = "@{receiptTime}"
                    }
                  },
                  {
                    translate {
                      field: cefSignatureId
                      dictionary: ${dhcpd.custom.cefSignatureId.translations}{
                        "DHCP_RenewLease": DHCPACK
                        "DHCP_GrantLease": DHCPACK
                        "DHCPACK": DHCPACK
                        "DHCPREQUEST": DHCPREQUEST
                        "DHCPRELEASE": DHCPRELEASE
                        "DHCPNAK": DHCPNACK
                        "DHCPINFORM": DHCPINFORM
                        "uid lease": DHCPISSUE
                        "Added new forward map": DHCPDNSUP
                      }
                      fallback: Unknown # if no fallback is defined and no match is found then the command fails
                    }
                  }
                  #,
                  #{
                  #  date2timestamp{
                  #      inputFieldName : "startTime",
                  #      dateFormat : ${dhcpd.date.dateFormat}, #"MMM d HH:mm:ss",
                  #      precision : "ms",
                  #      timeZone : ${dhcpd.date.timeZone}, #"PST",
                  #      guessYear : true
                  #  }
                  #},
#                  {
#                    validateSupportedFormat {
#                      failOnUnknownFields: "false"
#                      defaultFormat: "HETMef"
#                    }
#                  }
                ]
              }
            },
            {
              validateSupportedFormat {
                failOnUnknownFields: "false"
                defaultFormat: "HETMef"
              }
            }
          ]
        }
      }
    ]
  } 
]