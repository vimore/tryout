include classpath("logparsingjob.conf")
morphlines : [
  {
    # Name used to identify a morphline. E.g. used if there are multiple
    # morphlines in a morphline config file
    id : dnsmasq-dhcp

    # Import all morphline commands in these java packages and their subpackages.
    # Other commands that may be present on the classpath are not visible to this
    # morphline.
    importCommands : [ "org.kitesdk.morphline.**", "com.securityx.model.mef.morphline.**"]

    commands : [

      {
        ruleset {
          name : "Dnsmasq-Dhcp",
          field : "dnsmasqInput",
          sampleUnmatchedTo : "./target/windows-unmatched.log",
          nodes : [
            { 
              dictionaryString : """
                SEV <\d+>
                DATE \w+\s+\d+\s+\d+:\d+:\d+
                DNSMASQDHCP dnsmasq-dhcp
                PROCESSPID \d+
              """
              # <30>May  8 17:26:27 dnsmasq-dhcp[304]: DHCPREQUEST(br0) 192.168.10.208 b8:e8:56:03:c9:7e
              expr : """(?:(?:%{SEV})?%{DATE:startTime}\s)?%{DNSMASQDHCP:deviceProcessName}\[%{PROCESSPID:deviceProcessId}\]:\s"""
              children : [
                { 
                  dictionaryString : """
                    DNSMASQDHCP dnsmasq-dhcp
                    PROCESSPID d+
                    DHCPACTION DHCPREQUEST|DHCPINFORM
                    INTERFACE [^\)]+
                    IPADDRESS \S+
                    MACADDRESS \S+
                  """
                  # dnsmasq-dhcp[304]: DHCPREQUEST(br0) 192.168.1.192 b8:e8:56:03:c9:7e
                  expr:"""%{DHCPACTION:cefSignatureId}\(%{INTERFACE:deviceInterface}\)\s%{IPADDRESS:sourceAddress}\s%{MACADDRESS:sourceMacAddress}"""
                  children : []
                },
                { 
                  dictionaryString : """
                    DNSMASQDHCP dnsmasq-dhcp
                    PROCESSPID d+
                    DHCPACTION DHCPDISCOVER
                    INTERFACE [^\)]+
                    MACADDRESS \S+
                  """
                  # dnsmasq-dhcp[304]: DHCPDISCOVER(br0) b8:e8:56:03:c9:7e
                  expr : """%{DHCPACTION:cefSignatureId}\(%{INTERFACE:deviceInterface}\)\s%{MACADDRESS:sourceMacAddress}"""
                  children : []
                },
                { 
                  dictionaryString : """
                    DNSMASQDHCP dnsmasq-dhcp
                    PROCESSPID d+
                    DHCPACTION (?:DHCPACK|DHCPOFFER)
                    INTERFACE [^\)]+
                    IPADDRESS \S+
                    MACADDRESS \S+
                    HOSTNAME .*
                  """
                  #<30>May  9 09:52:40 dnsmasq-dhcp[304]: DHCPACK(br0) 192.168.10.208 b8:e8:56:03:c9:7e
                  #<30>May  9 09:52:39 dnsmasq-dhcp[304]: DHCPOFFER(br0) 192.168.10.208 b8:e8:56:03:c9:7e
                  expr : """%{DHCPACTION:cefSignatureId}\(%{INTERFACE:deviceInterface}\)\s%{IPADDRESS:destinationAddress}\s%{MACADDRESS:destinationMacAddress}(?:\s%{HOSTNAME:destinationNameOrIp})?"""
                  children : []
                },
                { 
                  dictionaryString : """
                    DNSMASQDHCP dnsmasq-dhcp
                    PROCESSPID d+
                    DHCPACTION DHCPNAK
                    INTERFACE [^\)]+
                    IPADDRESS \S+
                    MACADDRESS \S+
                    REASON .*
                  """
                  #<30>May  9 09:52:39 dnsmasq-dhcp[304]: DHCPNAK(br0) 192.168.1.192 b8:e8:56:03:c9:7e wrong address
                  expr : """%{DHCPACTION:cefSignatureId}\(%{INTERFACE:deviceInterface}\)\s%{IPADDRESS:destinationAddress}\s%{MACADDRESS:destinationMacAddress}\s%{REASON:eventOutcome}"""
                  children : []
                }
              ]
            }
          ]
        }

      },
      {
        addKeyValuesIfMissing  {
            logSourceType : "HETMef"
            externalLogSourceType : "dnsmasq-dhcp"
            deviceNameOrIp : "@{logCollectionHost}"
            startTime="@{receiptTimeStr}"
        }
      },
      {
        date2timestamp{
            inputFieldName : "startTime", 
            dateFormat : ${dnsmasq_dhcp.date.dateFormat}, #"MMM d HH:mm:ss",  
            precision : "ms",
            timeZone : ${dnsmasq_dhcp.date.timeZone}, #"PST", 
            guessYear : true
        }
      },
      {
        validateSupportedFormat  {
          failOnUnknownFields : "false"
          defaultFormat : "HETMef"
        }
      }
    ]
  } 
]