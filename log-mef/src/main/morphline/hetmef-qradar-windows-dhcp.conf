include classpath("logparsingjob.conf")
morphlines : [
  {
    # Name used to identify a morphline. E.g. used if there are multiple
    # morphlines in a morphline config file
    id : qradar-dhcp_windows

    # Import all morphline commands in these java packages and their subpackages.
    # Other commands that may be present on the classpath are not visible to this
    # morphline.
    importCommands : [ "org.kitesdk.morphline.**", "com.securityx.model.mef.morphline.**"]

    commands : [

      {
        grokcmd {
          # broken by relocation of morphline config to resource
          #dictionaryFiles : [logcollection-grok-patterns]
          dictionaryString : """
                      MAC \w+
                      HOST [\w\.-]+
                      """
          #Oct 16 10:49:20 ciscopix %PIX-6-302015: B....
          expressions : {
            MAC Address : """(?:^$|%{MAC:destinationMacAddress})""",
            Host Name  : """(?:^$|%{HOST:destinationNameOrIp})"""
          }
          extract : true
          findSubstrings : true
          addEmptyStrings : false
        }

      },
      {
        addKeyValuesIfMissing  {
            #destinationMacAddress : "@{MAC Address}"
            destinationAddress : "@{IP Address}"
            #destinationNameOrIp : "@{Host Name}"
            startTime : "@{Date} @{Time}"
            cefSignatureId : "@{Description}"
        }
      },
      {
        translate {
          field : cefSignatureId
          dictionary : {
             "Assign" : DHCPACK
             "Renew" : DHCPACK
             "Expired" : DHCPRELEASE
          }
          fallback : Unknown # if no fallback is defined and no match is found then the command fails
        }
      },
      {
        addKeyValuesIfMissing  {
            logSourceType : "HETMef"
            externalLogSourceType : "qradar-windows-dhcp"
            deviceNameOrIp : "@{logCollectionHost}"
            #startTime:"@{receiptTimeStr}"
        }
      },
      {
        date2timestamp{
          inputFieldName : "startTime",
          dateFormat : ${qradar-dhcp.date.dateFormat}, #"MMM d HH:mm:ss",
          precision : "ms",
          timeZone : ${qradar-dhcp.date.timeZone}, #"PST",
          guessYear : true
        }
      },
      {
        validateSupportedFormat  {
          failOnUnknownFields : "false"
          defaultFormat : "HETMef"
        }
      }
    ]
  } 
]