include classpath("logparsingjob.conf")
morphlines : [
  {
    id : tanium-autorun_program_details-csv
    importCommands : [ "org.kitesdk.morphline.**", "com.securityx.model.mef.morphline.**"]

    commands : [
      {
        tsvq {
          inputFieldName: "message",
          fieldSep: ",",
          quoteChar: "\"",
          trim: true,
          fieldNames: [
            "deviceNameOrIp",
            "serialNumer",
            "deviceAddress",
            "JobLocation",
            "jobName",
            "category",
            "publisher",
            "processFilePath",
            "processFileVersion",
            "jobCmd",
            "processFileMd5",
            "dummy1",
            "dummy2",
            "dummy3"
          ]
        }
      },
      {
        addKeyValuesIfMissing  {
          startTime: "@{logCollectionTime}"
          cefSignatureId: "Seen"
          logSourceType: "HostJobMef"
          deviceSerialNumber: "@{serialNumer}"
          externalLogSourceType: "tanium-AutoRun-Program-Details-csv"
        }
      },
      {
        validateSupportedFormat  {
          failOnUnknownFields : "false"
          defaultFormat : "HostJobMef"
        }
      }
    ]
  },
  {
    id : tanium-autorun_program_details
    importCommands : [ "org.kitesdk.morphline.**", "com.securityx.model.mef.morphline.**"]

    commands : [
      {
        readJson {}
      },
      {
        extractJsonPaths {
          flatten : false
          paths : {
            deviceNameOrIp : /Machine-Info/Computer-Name
            deviceAddress : /Machine-Info/Client-IP-Address
            deviceSerialNumber: /Machine-Info/Computer-Serial-Number
            processFilePath : /AutoRun-Program-Details/Image-Path
            processFileMd5 : /AutoRun-Program-Details/MD5
            jobCmd : /AutoRun-Program-Details/Launch-String
            processFileVersion : /AutoRun-Program-Details/Version
            jobName : /AutoRun-Program-Details/Entry
            JobLocation : /AutoRun-Program-Details/Entry-Location
            startTime : /Metadata/Timestamp
          }
        }
      },
      {
        if {
          conditions: [
            {
              contains { deviceNameOrIp: ["[no results]"]}
            }
          ]
          then: [
            {
              dropRecord {}
            }
          ]
          else: [
            {
              addKeyValuesIfMissing  {
                cefSignatureId: "Autorun"
              }
            },
            {
              addKeyValuesIfMissing  {
                logSourceType: "HostJobMef"
                externalLogSourceType: "tanium-AutoRun-Program-Details"
                deviceNameOrIp: "@{logCollectionHost}"
              }
            },
            {
              date2timestamp{
                inputFieldName : "startTime",
                dateFormat : ${taniumjson.date.dateFormat} ,
                precision : "ms",
                timeZone : ${taniumjson.date.timeZone}
              }
            },
            {
              validateSupportedFormat  {
                failOnUnknownFields : "false"
                defaultFormat : "HostJobMef"
              }
            }
          ]
        }

      }

#        ,
#        {
#          grokcmd{
#             dictionaryString : """
#              PATH [^?]+
#              QUERY .*
#            """
#            #1392068647.385 117047 81.56.112.95 TCP_MISS/200 4814 CONNECT hivedata.jiveon.com:443 - DIRECT/23.218.66.131 -
#            expressions : {
#                dpiRequestQuery : """%{PATH:requestPath}\?%{QUERY:requestQuery}"""
#            }
#          extract : true
#          findSubstrings : false
#          addEmptyStrings : false
#          }
#        }

    ]
  }

]