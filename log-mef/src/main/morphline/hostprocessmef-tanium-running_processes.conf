include classpath("logparsingjob.conf")
morphlines : [
  {
    id : tanium-running_process-csv
    importCommands : [ "org.kitesdk.morphline.**", "com.securityx.model.mef.morphline.**"]

    commands : [
      {
        tsvq {
          inputFieldName: "message",
          fieldSep: ",",
          quoteChar: "\"",
          trim: true,
          fieldNames: [
            "deviceNameOrIp",
            "serialNumber",
            "deviceAddress",
            "processFilePath",
            "processFileMd5",
            "dummy"
          ]
        }
      },
      {
        addKeyValuesIfMissing  {
          startTime: "@{logCollectionTime}"
          cefSignatureId: "Seen"
          logSourceType: "HostProcessMef"
          deviceSerialNumber: "@{serialNumber}"
          externalLogSourceType: "tanium-Running-Processes-with-MD5-Hash-csv"
        }
      },
      {
        validateSupportedFormat  {
          failOnUnknownFields : "false"
          defaultFormat : "HostProcessMef"
        }
      }
    ]

  },
  {
    id : tanium-running_process
    importCommands : [ "org.kitesdk.morphline.**", "com.securityx.model.mef.morphline.**"]

    commands : [
      {
        readJson {}
      },
      {
        extractJsonPaths {
          flatten : false
          paths : {
            deviceNameOrIp : /Machine-Info/Computer-Name
            deviceSerialNumber:/Machine-Info/Computer-Serial-Number
            deviceAddress : /Machine-Info/Client-IP-Address
            processFilePath : /Running-Processes-with-MD5-Hash/Path
            processFileMd5 : /Running-Processes-with-MD5-Hash/MD5
            startTime : /Metadata/Timestamp
          }
        }
      },
      {
        if {
          conditions: [
            {
              contains { deviceNameOrIp: ["[no results]"]}
            }
          ]
          then: [
            {
              dropRecord {}
            }
          ]
          else: [
            {
              addKeyValuesIfMissing  {
                md5: ""
                ports: ""
                cefSignatureId: "Seen"
              }
            },
            {
              grok {
                dictionaryString : """
                DEFAULTPROCESSNAME [^/]+
                WINDRIVE [a-zA-Z]
                WINPATH (?:[^\\]+\\)*
                DEFAULTWINPROCESSNAME  [^\\]+
            """
                expressions : {
                  processFilePath : """(?:^%{WINDRIVE}:\\%{WINPATH}%{DEFAULTWINPROCESSNAME:defaultProcessName}|.*/%{DEFAULTPROCESSNAME:defaultProcessName})"""
                }
                extract : true
                findSubstrings : false
                addEmptyStrings : false
              }
            },
            {
              addKeyValuesIfMissing  {
                logSourceType: "HostProcessMef"
                externalLogSourceType: "tanium-Running-Processes-with-MD5-Hash"
                deviceNameOrIp: "@{logCollectionHost}"
                processName: "@{defaultProcessName}"
              }
            },
            {
              date2timestamp{
                inputFieldName : "startTime",
                dateFormat : ${taniumjson.date.dateFormat} ,
                precision : "ms",
                timeZone : ${taniumjson.date.timeZone}
              }
            },
            {
              validateSupportedFormat  {
                failOnUnknownFields : "false"
                defaultFormat : "HostProcessMef"
              }
            }
          ]
        }

      }

#        ,
#        {
#          grokcmd{
#             dictionaryString : """
#              PATH [^?]+
#              QUERY .*
#            """
#            #1392068647.385 117047 81.56.112.95 TCP_MISS/200 4814 CONNECT hivedata.jiveon.com:443 - DIRECT/23.218.66.131 -
#            expressions : {
#                dpiRequestQuery : """%{PATH:requestPath}\?%{QUERY:requestQuery}"""
#            }
#          extract : true
#          findSubstrings : false
#          addEmptyStrings : false
#          }
#        }

    ]
  }

]