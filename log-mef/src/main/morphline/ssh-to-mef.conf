morphlines : [
  {
    # Name used to identify a morphline. E.g. used if there are multiple
    # morphlines in a morphline config file
    id : sshd

    # Import all morphline commands in these java packages and their subpackages.
    # Other commands that may be present on the classpath are not visible to this
    # morphline.
    importCommands : [ "org.kitesdk.morphline.**", "com.securityx.model.mef.morphline.**"]

    commands : [

      {
        ruleset {
          name : "sshd",
          field : "syslogMessage",
          sampleUnmatchedTo : "./target/sshd-unmatched.log",
          nodes : [
              { 
                dictionaryString : """
                  SSHPROCESS sshd
                  SSHPROCESSID \d+
                """
                expr : """%{SSHPROCESS:deviceProcessName}\[%{SSHPROCESSID:deviceProcessId}\]:\s"""
                children : [{
                    dictionaryString : """
                      USER [^\s]+?
                      IP [^\s]+?
                      INVALID_USER Invalid\suser
                    """
                    expr : """%{INVALID_USER:cefEventName}\s%{USER:destinationUserName}\sfrom\s%{IP:sourceNameOrIp}"""
                    children : []
                  },{ #sshd[21609]: Accepted publickey for ec2-user from 67.148.60.198 port 54117 ssh2
                    dictionaryString : """
                      USER [^\s]+
                      PORT [^\s]+
                      IP [^\s]+
                      ACCEPTED_PUBLICKEY Accepted\spublickey
                    """
                    expr : """%{ACCEPTED_PUBLICKEY:cefEventName}\sfor\s%{USER:destinationUserName}\sfrom\s%{IP:sourceNameOrIp}\sport\s%{PORT:sourcePort}\sssh2"""
                    children : []
                  },{
                    dictionaryString : """
                      PAM_UNIX pam_unix\(sshd:[^\)]+\)
                    """
                    expr : """%{PAM_UNIX}:\s"""
                    children : [{ #pam_unix(sshd:session): session closed for user ec2-user
                          dictionaryString : """
                            SESSION_CLOSED session\sclosed
                            SRCUID \d+
                            USER [^\s]+
                          """
                          expr : """%{SESSION_CLOSED:cefEventName}\sfor\suser\s%{USER:destinationUserName}"""
                          children : []
                      },{
                          dictionaryString : """
                            SESSION_OPENED session\sopened
                            SRCUID \d+
                            USER [^\s]+?
                          """
                          expr : """%{SESSION_OPENED:cefEventName}\sfor\suser\s%{USER:destinationUserName}\sby\s\(uid=%{SRCUID:sourceUserId}\)"""
                          children : []
                      },{
                          dictionaryString : """
                            AUTH_FAILURE authentication\sfailure
                            NON_EMPTY [^\s]*
                          """
                          expr : """%{AUTH_FAILURE:cefEventName};\slogname=%{NON_EMPTY}\suid=%{NON_EMPTY:destinationUserId}\seuid=%{NON_EMPTY:destinationUserEid}\stty=%{NON_EMPTY}\sruser=%{NON_EMPTY:sourceUserName}\srhost=%{NON_EMPTY:sourceNameOrIp}\s+(?:user=%{NON_EMPTY:destinationUserName})?"""
                          children : []
                      },
                      {   #sshd[26957]: pam_unix(sshd:auth): check pass; user unknown
                          dictionaryString : """
                            CHECK_PASS check\spass
                            USER_UNKNOWN user\sunknown
                          """
                          expr : """%{CHECK_PASS:cefEventName};\s%{USER_UNKNOWN}"""
                          children : []
                      }#,
                      #{
                      #}
                    ]
                  },{ 
                    #sshd[16845]: PAM service(sshd) ignoring max retries; 6 > 3
                    dictionaryString : """
                      PAM PAM
                    """
                    expr : """PAM\s"""
                    children : [{ 
                        #sshd[16845]: PAM service(sshd) ignoring max retries; 6 > 3
                        dictionaryString : """
                          SERVICE_IGNORING service\(sshd\)\signoring\smax\sretries
                          GREEDY .*
                          
                        """
                        expr : """%{SERVICE_IGNORING:cefEventName};\s%{GREEDY:reason}"""
                        children : []
                      },{ 
                        #sshd[32611]: PAM 2 more authentication failures; logname= uid=0 euid=0 tty=ssh ruser= rhost=200.186.145.218  user=root
                        dictionaryString : """
                          PAM_MORE more authentication failures
                          NON_EMPTY [^\s]*
                          ATTEMPT_NB \d+
                        """
                        expr : """%{ATTEMPT_NB:baseEventCount}\s%{PAM_MORE:cefEventName};\slogname=%{NON_EMPTY}\suid=%{NON_EMPTY:destinationUserId}\seuid=%{NON_EMPTY:destinationUserEid}\stty=%{NON_EMPTY}\sruser=%{NON_EMPTY:sourceUserName}\srhost=%{NON_EMPTY:sourceNameOrIp}\s+(?:user=%{NON_EMPTY:destinationUserName})?"""
                        children : []
                      }
                    ]
                  },{ 
                    #pam_succeed_if(sshd:auth): error retrieving information about user oracle06
                    dictionaryString : """
                      PAM_SUCCEED_IF pam_succeed_if\(sshd:[^\)]+\)
                      ERROR_RETRIEVING error\sretrieving\sinformation
                      USER [^\s]+
                    """
                    expr : """%{PAM_SUCCEED_IF}:\s%{ERROR_RETRIEVING:cefEventName}\sabout\suser\s%{USER:destinationUserName}"""
                    children : []
                  },{
                    dictionaryString : """
                      FAILED_PASSWORD Failed\spassword
                      IP [^\s]+?
                      USER [^\s]+
                      PORT \d+
                    """
                    expr : """%{FAILED_PASSWORD:cefEventName}\sfor(?:\sinvalid\suser)?\s%{USER:destinationUserName}\sfrom\s%{IP:sourceNameOrIp}\sport\s%{PORT:sourcePort}\sssh2"""
                    children : []
                  },{
                    dictionaryString : """
                      TOO_MANY_AUTH_FAILURE Disconnecting:\sToo\smany\sauthentication\sfailures
                      USER [^\s]+
                    """
                    expr : """%{TOO_MANY_AUTH_FAILURE:cefEventName}\sfor\s%{USER:destinationUserName}"""
                    children : []
                  },{
                    dictionaryString : """
                      ADDRESS Address
                      USER [^\s]+?
                      IP [^\s]+?
                      MAPS_TO maps\sto
                      BUT_DOES_NOT_MAPBACK but\sthis\sdoes\snot\smap\sback\sto\sthe\saddress
                      POSSIBLE_BREAK_IN POSSIBLE\sBREAK-IN\sATTEMPT!
                    """
                    expr : """%{ADDRESS}\s%{IP:sourceAddress}\s%{MAPS_TO}\s%{IP:sourceSuspectHostName},\s%{BUT_DOES_NOT_MAPBACK}\s-\s%{POSSIBLE_BREAK_IN:cefEventName}"""
                    children : []
                  },{
                    dictionaryString : """
                      ZONE [^\s]+?
                      REVERSE_MAPPING reverse\smapping\schecking\sgetaddrinfo\sfor
                      IP [^\s]+?
                      POSSIBLE_BREAK_IN POSSIBLE\sBREAK-IN\sATTEMPT!
                    """
                    expr : """%{REVERSE_MAPPING}\s%{ZONE}\s\[%{IP:sourceAddress}\]\sfailed\s-\s%{POSSIBLE_BREAK_IN:cefEventName}"""
                    children : []
                  },{
                    dictionaryString : """
                      INPUT_USERAUTH_REQ input_userauth_request
                      INVALID_USER invalid\suser
                      NON_EMPTY [^\s]*
                    """
                    expr : """%{INPUT_USERAUTH_REQ}:\s%{INVALID_USER:cefEventName}\s%{NON_EMPTY:destinationUserName}"""
                    children : []
                  },{
                    dictionaryString : """
                      DID_NOT_RECEIVED_IDENTIFICATION_STR Did\snot\sreceive\sidentification\sstring
                      NON_EMPTY [^\s]*
                    """
                    expr : """%{DID_NOT_RECEIVED_IDENTIFICATION_STR:cefEventName}\sfrom\s%{NON_EMPTY:SourceNameOrIp}"""
                    children : []
                  },{
                    dictionaryString : """
                      RECEIVED_DISCONNECT Received\sdisconnect
                      IP [^\s]+?
                      GREEDY .*
                    """
                    expr : """%{RECEIVED_DISCONNECT:cefEventName}\sfrom\s%{IP:sourceNameOrIp}:\s%{GREEDY:reason}"""
                    children : []
                  },{
                    dictionaryString : """
                      CONNECTION_CLOSED Connection\sclosed
                      IP [^\s]+
                    """
                    expr : """%{CONNECTION_CLOSED:cefEventName}\sby\s%{IP:sourceNameOrIp}"""
                    children : []
                  }
                ]
              }
          ]
          extract : true
          addEmptyStrings : false 
        }

      },
      {
        addValuesIfAbsent  {
            logSourceType : ["Cef"]  # captured information in cef namespace
        }
      }, 
      {
        webProxyMefFormat {
            formatIdFromFieldName : "logSourceType",  #supposed to contain "cef"
            discardUnmappableFields : "false", 
            discardOriginalMappedFields :  "true"
            }
      }

    ]
  }
]