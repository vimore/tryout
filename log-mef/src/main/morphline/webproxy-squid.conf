include classpath("logparsingjob.conf")
morphlines : [
  {
    # Name used to identify a morphline. E.g. used if there are multiple
    # morphlines in a morphline config file
    id : squiddefault

    # Import all morphline commands in these java packages and their subpackages.
    # Other commands that may be present on the classpath are not visible to this
    # morphline.
    importCommands : [ "org.kitesdk.morphline.**",  "com.securityx.model.mef.morphline.**"]

    commands : [

      {
        grokcmd {
            # broken by relocation of morphline config to resource
            #dictionaryFiles : [logcollection-grok-patterns] 
            dictionaryString : """
              UTCSEC \d+
              UTCMS \d{3}
              DURATION \d+
              ####################
              # Hostname and IP
              IP (?<![0-9])(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))(?![0-9])
              HOSTNAME \b(?:[0-9A-Za-z][0-9A-Za-z-]{0,62})(?:\.(?:[0-9A-Za-z][0-9A-Za-z-]{0,62}))*(\.?|\b)
              HOST %{HOSTNAME}
              IPORHOST (?:%{HOSTNAME}|%{IP})
              CODE [^\/]+
              STATUS \d+
              BYTES \d+
              METHOD \w+
              SCHEME [^:]+
              PORT \d+
              PATH [^\s]+
              RFC931 [^\s]+
              PEERSTATUS [^\/]+
              PEERHOST %{IP}
              RESPONSECONTENTTYPE .*
              
            """
            #1392068647.385 117047 81.56.112.95 TCP_MISS/200 4814 CONNECT hivedata.jiveon.com:443 - DIRECT/23.218.66.131 -
            expressions : {
                squidMessage : """%{UTCSEC:utcsec}\.%{UTCMS:utcms}\s+%{DURATION}\s%{IPORHOST:sourceNameOrIp}\s%{CODE:devicePolicyAction}/%{STATUS:cefSignatureId}\s%{BYTES:bytesIn}\s%{METHOD:requestMethod}\s(?:%{SCHEME:requestScheme}://)?%{IPORHOST:destinationNameOrIp}(?::%{PORT:destinationPort})?(?:%{PATH:requestPath})?\s%{RFC931:sourceUserName}\s%{PEERSTATUS:deviceAction}/(?:-|%{PEERHOST:destinationAddress}|[^\s]+)\s%{RESPONSECONTENTTYPE:responseContentType}"""
            }
          extract : true
          findSubstrings : false
          addEmptyStrings : false 
        }

      },
      {
        fieldAggregator{
          startTime : ["%{utcsec}%{utcms}"],
        }
      },
      {
        addKeyValuesIfMissing  {
            logSourceType : "WebProxyMef"
            externalLogSourceType : "Squid"
            deviceNameOrIp : "@{logCollectionHost}"
        }
      },
      {
        validateSupportedFormat  {
          failOnUnknownFields : "false"
          defaultFormat : "WebProxyMef"
        }
      }
    ]
  },
  {
    # Name used to identify a morphline. E.g. used if there are multiple
    # morphlines in a morphline config file
    id : squidcombined

    # Import all morphline commands in these java packages and their subpackages.
    # Other commands that may be present on the classpath are not visible to this
    # morphline.
    importCommands : [ "org.kitesdk.morphline.**", "com.securityx.model.mef.morphline.**"]

    commands : [

      {
        grokcmd {
            # broken by relocation of morphline config to resource
            #dictionaryFiles : [logcollection-grok-patterns] 
            dictionaryString : """
              ####################
              # Hostname and IP
              IP (?<![0-9])(?:(?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2})[.](?:25[0-5]|2[0-4][0-9]|[0-1]?[0-9]{1,2}))(?![0-9])
              HOSTNAME (?:[0-9A-Za-z][0-9A-Za-z-]{0,62})(?:\.(?:[0-9A-Za-z][0-9A-Za-z-]{0,62}))*(\.?|\b)
              HOST %{HOSTNAME}
              IPORHOST (?:%{HOSTNAME}|%{IP})
              RFC931 [^\s]+
              DESTUSER [^\s+]+
              DATE [^\]]+
              METHOD \w+
              SCHEME [^:]+
              PORT \d+
              PATH [^\s]+
              HTTPVERSION HTTP\/[^"]+
              STATUS \d+
              BYTES \d+
              REFERER [^"]+
              USERAGENT [^"]+
              CODE [^:]+
              PEERSTATUS .*$
              
              
            """
            #81.56.112.95 - - [28/Feb/2014:08:32:35 -0500] "GET http://www.squid-cache.org/Doc/config/logformat/ HTTP/1.1" 304 431 "http://wiki.squid-cache.org/Features/LogFormat" "Mozilla/5.0 (Windows NT 6.1; WOW64; rv:27.0) Gecko/20100101 Firefox/27.0" TCP_REFRESH_UNMODIFIED:DIRECT
            #81.56.112.95 - - [28/Feb/2014:08:32:35 -0500] "GET http://www.squid-cache.org/Doc/config/logformat/ HTTP/1.1" 304 431 \"http://wiki.squid-cache.org/Features/LogFormat\" \"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:27.0) Gecko/20100101 Firefox/27.0\" TCP_REFRESH_UNMODIFIED:DIRECT
            expressions : {
                squidMessage : """%{IPORHOST:sourceNameOrIp}\s(?:-|%{RFC931:rfc931SourceUserName})\s(?:-|%{DESTUSER:sourceUserName})\s\[%{DATE:startTime}\]\s"%{METHOD:requestMethod}\s(?:%{SCHEME:requestScheme}://)?%{IPORHOST:destinationNameOrIp}(?::%{PORT:destinationPort})?(?:%{PATH:requestPath})?\s%{HTTPVERSION:requestVersion}"\s%{STATUS:cefSignatureId}\s(?:%{BYTES:bytesOut}\s)?%{BYTES:bytesIn}\s"%{REFERER:requestReferer}"\s"%{USERAGENT:requestClientApplication}"\s%{CODE:devicePolicyAction}:%{PEERSTATUS:deviceAction}"""
            }
          extract : true
          findSubstrings : false
          addEmptyStrings : false 
        }

      },
      {
        date2timestamp{
            inputFieldName : "startTime", 
            dateFormat : ${squidcombined.date.dateFormat} ,  
            precision : "ms",
            timeZone : ${squidcombined.date.timeZone} 
        }
      },
      {
        addKeyValuesIfMissing  {
            logSourceType : "WebProxyMef",
            sourceUserName : "@{rfc931SourceUserName}", # if sourceNameOrIp not extracted from log try if rfc931SourceUserName as been extracted
            externalLogSourceType : "Squid",
            deviceNameOrIp : "@{logCollectionHost}"
        }
      },
      {
        validateSupportedFormat  {
          failOnUnknownFields : "false"
          defaultFormat : "WebProxyMef"
        }
      }

    ]
  },  
  {
    # from syslog handling process name before processing line
    id : fromrsquidprocess
    importCommands : [ "org.kitesdk.morphline.**", "com.securityx.model.mef.morphline.**"]

    commands : [
      {
        grokcmd {
            dictionaryString : """
            SQUID \(squid\):
            GREEDY .*
          """, 
 
            #(squid):   81.56.112.95 - - [28/Feb/2014:08:32:35 -0500] "GET http://www.squid-cache.org/Doc/config/logformat/ HTTP/1.1" 304 431 "http://wiki.squid-cache.org/Features/LogFormat" "Mozilla/5.0 (Windows NT 6.1; WOW64; rv:27.0) Gecko/20100101 Firefox/27.0" TCP_REFRESH_UNMODIFIED:DIRECT

            expressions : {
                squidInput : """%{SQUID}\s+%{GREEDY:squidMessage}$"""
            }
          extract : true,
          findSubstrings : false,
          addEmptyStrings : false 
        },
      },        
    ]
  },
  {
    # from syslog handling process name before processing line
    id : squidcombinedfromrsyslog
    importCommands : [ "org.kitesdk.morphline.**", "com.securityx.model.mef.morphline.**"]

    commands : [
      { 
        harnessCmd  {
          morphlineFile : "webproxy-squid.conf"
          morphlineId : "fromrsquidprocess"
          transferFieldNamedToMessage : "message"
          messageFieldName : "squidInput"
        }
      },
      { 
        harnessCmd  {
          morphlineFile : "webproxy-squid.conf"
          morphlineId : "squidcombined"
          transferFieldNamedToMessage : "squidMessage"
          messageFieldName : "squidMessage"
        }, 
      }
    ]
  },
  { 
    # from file no prefix to handle
    id : squidcombinedfromaccesslog
    importCommands : [ "org.kitesdk.morphline.**", "com.securityx.model.mef.morphline.**"]

    commands : [
      {
        addKeyValuesIfMissing  {
            squidMessage : "@{message}"
        }
      },
      { 
        harnessCmd  {
          morphlineFile : "webproxy-squid.conf"
          morphlineId : "squidcombined"
          transferFieldNamedToMessage : "squidMessage"
          messageFieldName : "squidMessage"
        }
      }
    ]
  },
  {
    # from syslog handling process name before processing line
    id : squidfromrsyslog
    importCommands : [ "org.kitesdk.morphline.**", "com.securityx.model.mef.morphline.**"]

    commands : [
      { 
        harnessCmd  {
          morphlineFile : "webproxy-squid.conf"
          morphlineId : "fromrsquidprocess"
          transferFieldNamedToMessage : "message"
          messageFieldName : "squidInput"
        }
      },
      { 
        harnessCmd  {
          morphlineFile : "webproxy-squid.conf"
          morphlineId : "squiddefault"
          transferFieldNamedToMessage : "squidMessage"
          messageFieldName : "squidMessage"
        }
      }
    ]
  },
    { 
    # from file no prefix to handle
    id : squidfromaccesslog
    importCommands : [ "org.kitesdk.morphline.**", "com.securityx.model.mef.morphline.**"]

    commands : [
      {
        addValuesIfAbsent  {
            squidMessage : "@{message}"
        }
      },
      { 
        harnessCmd  {
          morphlineFile : "webproxy-squid.conf"
          morphlineId : "squiddefault"
          transferFieldNamedToMessage : "squidMessage"
          messageFieldName : "squidMessage"
        }
      }
    ]
  } 
]
