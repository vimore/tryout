include classpath("logparsingjob.conf")
morphlines : [
  {
    # Name used to identify a morphline. E.g. used if there are multiple
    # morphlines in a morphline config file
    id : mcafeewebsec_selector

    # Import all morphline commands in these java packages and their subpackages.
    # Other commands that may be present on the classpath are not visible to this
    # morphline.
    importCommands : [ "org.kitesdk.morphline**", "com.securityx.model.mef.morphline.**"]
    
    commands : [
      {
        grokcmd {
          # broken by relocation of morphline config to resource
          #dictionaryFiles : [logcollection-grok-patterns]
          dictionaryString : """
              MWG mwg
              KVP .*
            """
          #1392068647.385 117047 81.56.112.95 TCP_MISS/200 4814 CONNECT hivedata.jiveon.com:443 - DIRECT/23.218.66.131 -
          expressions : {
            websecMessage : """%{MWG}:\s%{KVP:websecMsg}"""
          }
          extract : true
          findSubstrings : false
          addEmptyStrings : false
        }

      },
      {
        scriptSelector {
          scripts : [
            {
              logicalName : "websec_kvp",
              morphlineFile : "webproxymef-mcafee_websecurity.conf",
              morphlineId : "mcafeewebsec_kvp"
              transferFieldNamedToMessage : "websecMsg"
              fullCopy : true
            },
            {
              logicalName : "websec_leef",
              morphlineFile : "logcollection-leef.conf",
              morphlineId : "leef"
              transferFieldNamedToMessage : "websecMsg"
              messageFieldName: "leefInput"
              fullCopy : true
            }
          ]
          ################################################################################
          selectors : [
            {
              # LEEF format
              pattern : "^LEEF"
              logicalScriptName : ["websec_leef"]
              readFromFieldNamed : "websecMsg"
              subPatterns : []
            },
            {
              # kvp format
              pattern : "^[^=]+="
              logicalScriptName : ["websec_kvp"]
              readFromFieldNamed : "websecMsg"
              subPatterns : []
            }
          ]
        }# scriptSelector end
      }
    ]
  },
  {
    # Name used to identify a morphline. E.g. used if there are multiple
    # morphlines in a morphline config file
    id : mcafeewebsec_kvp

    # Import all morphline commands in these java packages and their subpackages.
    # Other commands that may be present on the classpath are not visible to this
    # morphline.
    importCommands : [ "org.kitesdk.morphline.**", "com.securityx.model.mef.morphline.**"]
    commands : [
      {
        cefKvpCommand  {
          inputFieldName : "websecMsg",
          fieldHeaderPattern: """\||\s"""
          trim : true,
        }
      },
      {
        addKeyValuesIfMissing {
          req_line: ""
          #externalLogSourceType : "mcafeewebsec",
          deviceEventCategory: "@{rep_level}/@{categories}"
        }
      },
      {
        grokcmd {
          # broken by relocation of morphline config to resource
          #dictionaryFiles : [logcollection-grok-patterns]
          dictionaryString : """
              ####################
              # Hostname and IP
              METHOD \S+
              VERSION \S+
              URL .*?
            """
          #requestMethod	requestScheme	destinationNameOrIp	destinationPort	requestPath
          expressions : {
            req_line : """^$|%{METHOD:requestMethod}\s%{URL:url}(?:\s%{VERSION:requestVersion})?"""
          }
          extract : true
          findSubstrings : false
          addEmptyStrings : false
        }

      },
      {
        addKeyValuesIfMissing {
          time_stamp : "@{receiptTimeStr}",
          logSourceType : "mcafeewebsec",
          url: ""
          sourceNameOrIp: "@{src}"
          #externalLogSourceType : "mcafeewebsec",
        }
      },

      {
        urlExtract {
          inputFieldName : "url",
          destFields : ["requestScheme", "destinationUserName", "destinationNameOrIp", "_destinationPort", "requestPath", "requestQuery"]
        }
      },

      {
        date2timestamp{
          inputFieldName : "time_stamp",
          dateFormat : ${mcafeewebsec.date.dateFormat},
          precision : "ms",
          guessYear: false
          timeZone : ${mcafeewebsec.date.timeZone},
        }
      },
      {
        webProxyMefFormat {
          formatIdFromFieldName : "logSourceType",
          discardUnmappableFields : "false",
          discardOriginalMappedFields :  "true"
        }
      },
      {
        validateSupportedFormat  {
          failOnUnknownFields : "false"
          defaultFormat : "WebProxyMef"
        }
      }
    ]
  },
  {
    # Name used to identify a morphline. E.g. used if there are multiple
    # morphlines in a morphline config file
    id : leef_mcafeewebsec

    # Import all morphline commands in these java packages and their subpackages.
    # Other commands that may be present on the classpath are not visible to this
    # morphline.
    importCommands : [ "org.kitesdk.morphline.**", "com.securityx.model.mef.morphline.**"]
    commands : [
      #{
      #  cefKvpSplitter  {
      #    inputFieldName : "leef_websecMessage",
      #    formatKeySet : ["mcafeewebsecurity"]
      #    trim : true,
      #  }
      #},
      {
        cefKvpCommand  {
          inputFieldName : "leef_websecMessage",
          fieldHeaderPattern: """\|"""
          #formatKeySet : ["mcafeewebsecurity"]
          trim : true,
        }
      },
      {
        addKeyValuesIfMissing {
          logSourceType : "mcafeewebsec",
          startTime: "@{devTime}"
          deviceEventCategory: "@{rep_level}/@{categories}"
          url: ""
          sourceNameOrIp: "@{src}"
        }
      },

      {
        urlExtract {
          inputFieldName : "url",
          destFields : ["requestScheme", "destinationUserName", "destinationNameOrIp", "_destinationPort", "requestPath", "requestQuery"]
        }
      },
      {
        webProxyMefFormat {
          formatIdFromFieldName : "logSourceType",
          discardUnmappableFields : "false",
          discardOriginalMappedFields :  "true"
        }
      },
      {
        validateSupportedFormat  {
          failOnUnknownFields : "false"
          defaultFormat : "WebProxyMef"
        }
      }
    ]
  }
]